var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.191,1,0.831]],["body/components/AppComponent.html",[0,0.297,1,1.38,2,1.301,3,0.555,4,0.472,5,1.101,6,1.101,7,1.101,8,0.472,9,2.275,10,0.848,11,2.001,12,3.797,13,1.622,14,1.578,15,4.135,16,2.193,17,3.797,18,3.062,19,1.604,20,3.797,21,2.216,22,2.578,23,2.04,24,1.38,25,3.797,26,1.691,27,3.117,28,2.506,29,3.703,30,1.928,31,3.797,32,3.797,33,3.062,34,3.797,35,1.483,36,3.062,37,3.703,38,4.792,39,3.797,40,1.101,41,2.048,42,1.578,43,1.928,44,1.481,45,1.301,46,1.301,47,1.481,48,3.797,49,3.797,50,3.797,51,0.325,52,0.746,53,1.907,54,0.472,55,0.052,56,0.741,57,0.967,58,0.848,59,3.062,60,0.644,61,2.821,62,3.062,63,3.797,64,1.481,65,3.797,66,1.301,67,3.797,68,2.578,69,3.797,70,3.797,71,0.903,72,0.472,73,0.967,74,2.821,75,0.967,76,1.432,77,1.254,78,0.555,79,0.555,80,0.967,81,1.481,82,1.481,83,1.101,84,1.791,85,1.101,86,0.746,87,1.101,88,0.848,89,1.101,90,0.741,91,1.101,92,0.741,93,0.967,94,1.101,95,1.101,96,0.741,97,1.101,98,0.741,99,0.967,100,1.101,101,0.741,102,0.967,103,1.101,104,1.101,105,0.035,106,0.035]],["title/modules/AppRoutingModule.html",[107,2.23,108,1.877]],["body/modules/AppRoutingModule.html",[0,0.366,3,0.723,4,0.615,8,0.615,46,1.26,51,0.518,55,0.052,71,1.072,72,0.615,73,1.26,78,0.885,79,0.723,88,1.353,90,1.182,92,1.182,93,1.26,96,1.182,98,1.182,99,1.26,101,1.182,102,1.26,105,0.041,106,0.041,108,3.056,109,2.495,110,3.676,111,4.501,112,2.285,113,4.866,114,3.676,115,3.676,116,3.676,117,2.495,118,3.676,119,3.676,120,3.676,121,2.495,122,3.676,123,3.676,124,3.676,125,2.964,126,1.434,127,1.105,128,5.362,129,1.434,130,2.145,131,2.495,132,2.964,133,3.676,134,3.676,135,3.676,136,2.964]],["title/injectables/AuthService.html",[75,0.948,137,0.831]],["body/injectables/AuthService.html",[3,0.503,4,0.428,8,0.428,10,0.769,13,1.392,14,1.067,19,1.548,24,1.067,28,1.803,43,1.299,51,0.294,52,0.698,54,0.802,55,0.052,56,1.071,57,1.398,58,1.226,60,1.161,66,1.217,71,0.91,72,0.428,75,1.217,78,0.503,79,0.503,86,0.698,105,0.032,106,0.032,129,1.386,137,1.067,138,1.299,139,2.063,140,1.548,141,3.29,142,3.29,143,4.079,144,0.933,145,4.407,146,4.041,147,3.554,148,0.769,149,1.737,150,2.992,151,1.684,152,3.551,153,0.933,154,0.933,155,2.411,156,2.558,157,2.864,158,2.411,159,1.642,160,1.799,161,2.797,162,1.161,163,2.864,164,1.803,165,3.864,166,1.642,167,2.864,168,2.558,169,1.803,170,2.237,171,4.792,172,1.592,173,3.551,174,3.551,175,3.551,176,3.551,177,2.558,178,3.551,179,1.067,180,3.007,181,2.433,182,3.734,183,2.703,184,2.864,185,2.864,186,2.558,187,2.864,188,2.572,189,3.551,190,3.551,191,2.864,192,2.864,193,2.77,194,2.071,195,2.558,196,3.551,197,3.551,198,2.864,199,1.067,200,2.558,201,1.803,202,3.551,203,2.558,204,1.737,205,2.558,206,2.558,207,1.493,208,2.558,209,2.558,210,1.493,211,1.493,212,1.325,213,2.558,214,2.558,215,0.998,216,2.558,217,2.558,218,1.386,219,3.29,220,2.558,221,2.558]],["title/injectables/CursosService.html",[137,0.831,222,1.614]],["body/injectables/CursosService.html",[3,0.486,4,0.414,8,0.414,10,1.374,13,0.742,14,1.203,19,1.042,24,0.742,26,1.188,43,1.254,51,0.284,52,0.681,54,0.866,55,0.052,56,1.381,57,1.188,58,1.042,60,1.152,66,1.372,71,0.787,72,0.414,78,0.486,79,0.486,86,0.932,105,0.032,106,0.032,127,1.374,130,2.337,137,1.042,138,1.254,140,1.203,144,0.91,148,0.742,149,1.677,150,2.947,153,1.245,154,1.245,155,2.353,157,1.992,162,1.081,164,1.76,179,1.203,180,3.018,201,2.033,204,1.677,207,1.442,210,1.442,211,1.442,212,1.517,222,2.023,223,1.992,224,4.004,225,4.004,226,3.466,227,3.466,228,3.466,229,4.341,230,3.466,231,3.466,232,3.466,233,3.466,234,4.004,235,2.47,236,4.867,237,3.466,238,4.739,239,3.822,240,2.47,241,3.466,242,4.967,243,2.47,244,2.47,245,3.466,246,2.47,247,3.466,248,2.47,249,3.466,250,2.023,251,3.466,252,4.004,253,3.466,254,2.795,255,2.47,256,3.5,257,3.5,258,3.229,259,3.229,260,2.47,261,2.795,262,2.795,263,3.466,264,1.992,265,1.992,266,2.47,267,1.992,268,2.795,269,2.47,270,1.442,271,2.47,272,1.677,273,2.47,274,2.47,275,1.442,276,3.229,277,2.718,278,4.004,279,4.004,280,4.004,281,4.004,282,4.739,283,4.004,284,4.004,285,2.47,286,4.004,287,2.47,288,4.004,289,1.992,290,2.47,291,1.254,292,2.47,293,2.47,294,2.47,295,2.47,296,2.47]],["title/injectables/LocalStorageService.html",[137,0.831,297,1.877]],["body/injectables/LocalStorageService.html",[3,0.661,4,0.563,8,0.563,43,1.708,51,0.387,54,0.783,55,0.052,56,1.411,58,1.524,60,1.121,71,0.661,72,0.563,78,0.661,79,0.661,86,0.919,105,0.039,106,0.039,127,1.011,137,1.28,138,1.708,140,1.405,144,1.119,153,1.228,154,1.228,162,1.121,165,3.436,172,1.662,199,1.477,210,1.964,212,1.524,297,2.892,298,4.089,299,2.713,300,4.675,301,4.914,302,4.675,303,4.675,304,4.26,305,3.364,306,5.373,307,3.364,308,4.26,309,3.364,310,4.26,311,3.364,312,4.26,313,3.364,314,4.26,315,3.364,316,4.675,317,4.675,318,3.77,319,4.675,320,4.26,321,3.364,322,3.364,323,3.364,324,3.364,325,3.364]],["title/components/LoginComponent.html",[0,0.191,90,0.726]],["body/components/LoginComponent.html",[0,0.242,1,0.588,2,1.003,3,0.385,4,0.328,5,0.763,6,0.763,7,0.763,8,0.328,10,1.401,11,1.142,13,1.581,14,1.252,19,1.499,21,1.708,23,1.301,24,1.314,26,1.498,30,2.22,35,0.588,40,0.763,41,1.893,42,1.458,44,1.142,45,1.334,46,1.003,47,1.142,51,0.225,52,0.575,53,1.558,54,0.587,55,0.052,56,0.921,60,0.951,64,0.763,71,0.891,72,0.328,73,1.003,75,1.597,76,0.993,77,0.869,78,0.385,79,0.385,80,0.671,81,1.142,82,1.142,83,0.763,84,1.518,85,0.763,86,0.765,87,0.763,88,0.588,89,0.763,90,1.022,91,0.763,92,0.514,93,0.671,94,0.763,95,0.763,96,0.514,97,0.763,98,0.514,99,0.671,100,0.763,101,0.514,102,0.671,103,0.763,104,0.763,105,0.027,106,0.027,112,1.78,126,0.763,127,0.88,129,1.518,140,1.314,144,0.769,148,1.17,153,0.769,154,0.769,159,1.597,160,1.688,162,0.888,164,2.301,166,1.334,169,1.486,172,1.142,179,1.17,181,1.486,183,2.272,188,2.645,193,2.381,194,1.78,199,1.17,212,0.88,215,1.518,218,1.142,275,1.708,326,0.869,327,1.578,328,1.486,329,2.366,330,1.987,331,2.927,332,2.36,333,2.22,334,2.552,335,1.708,336,2.781,337,1.729,338,2.642,339,2.927,340,2.36,341,2.36,342,1.558,343,2.047,344,2.047,345,1.301,346,3.506,347,2.927,348,3.506,349,3.138,350,1.708,351,2.272,352,1.142,353,2.272,354,2.72,355,2.927,356,1.708,357,2.36,358,2.832,359,2.272,360,2.047,361,2.36,362,1.708,363,1.708,364,1.943,365,2.36,366,1.957,367,1.486,368,1.987,369,2.36,370,2.36,371,2.36,372,1.708,373,1.957,374,2.552,375,2.36,376,2.272,377,1.708,378,1.987,379,1.987,380,1.987,381,1.78,382,1.957,383,1.486,384,1.708,385,2.927,386,2.36,387,2.047,388,1.486,389,1.708,390,2.381,391,0.763,392,1.142,393,0.993,394,0.993,395,1.578,396,1.957,397,1.142,398,1.708,399,1.708,400,1.957,401,1.142,402,1.142,403,1.142,404,1.957,405,1.957,406,1.957,407,1.957,408,0.993,409,1.78,410,1.578,411,1.78,412,1.957,413,1.78,414,0.993,415,1.957,416,1.957,417,1.957,418,1.957,419,2.115,420,1.957,421,2.36,422,2.36,423,1.142,424,1.957,425,1.578,426,2.642,427,3.138,428,3.138,429,3.526,430,1.708,431,2.927,432,2.927,433,2.927,434,2.927]],["title/components/MisCursosComponent.html",[0,0.191,92,0.726]],["body/components/MisCursosComponent.html",[0,0.222,1,0.509,2,0.899,3,0.333,4,0.284,5,0.661,6,0.661,7,0.661,8,0.284,10,1.43,11,1.682,13,1.296,14,1.471,16,1.606,19,1.527,21,1.531,23,1.166,24,1.296,26,1.527,27,1.781,35,0.509,40,0.661,41,1.884,42,1.452,44,1.024,45,0.899,46,0.899,47,1.024,51,0.369,52,0.516,53,1.737,54,0.654,55,0.052,56,0.689,57,0.899,58,0.789,60,0.984,64,1.41,66,1.478,71,0.848,72,0.284,73,0.581,75,1.567,76,0.86,77,0.753,78,0.333,79,0.333,80,0.581,81,1.024,82,1.024,83,0.661,84,1.41,85,0.661,86,0.768,87,0.661,88,0.509,89,0.661,90,0.445,91,0.661,92,0.949,93,1.655,94,0.661,95,0.661,96,0.445,97,0.661,98,0.445,99,0.581,100,0.661,101,0.445,102,0.581,103,0.661,104,0.661,105,0.024,106,0.024,112,1.63,117,3.025,126,0.661,127,1.175,129,1.024,130,3.022,140,1.086,144,0.689,148,0.965,151,1.478,153,0.843,154,0.843,158,1.151,159,1.677,160,1.728,161,2.413,162,0.825,164,1.332,166,0.899,167,2.116,170,0.86,179,1.086,181,1.332,183,1.531,192,2.116,198,2.116,199,1.339,212,0.789,215,1.41,218,1.024,222,2.413,239,2.915,250,1.531,254,2.116,265,3.334,270,1.531,276,4.03,289,1.367,291,1.835,326,0.753,328,1.332,329,2.484,333,0.86,337,1.737,342,1.426,345,1.166,354,2.669,364,1.606,367,1.332,388,1.835,389,1.531,391,0.661,394,0.86,408,1.835,409,1.985,411,1.985,413,1.985,414,0.86,419,2.452,423,1.531,426,1.781,435,3.593,436,1.367,437,2.116,438,2.116,439,4.998,440,1.781,441,2.624,442,2.624,443,2.624,444,2.624,445,1.781,446,1.781,447,2.116,448,2.116,449,3.21,450,2.624,451,3.21,452,2.179,453,2.624,454,2.624,455,3.614,456,2.454,457,1.695,458,2.624,459,2.624,460,1.695,461,2.624,462,2.624,463,1.695,464,2.624,465,2.624,466,2.624,467,4.134,468,1.695,469,2.116,470,1.695,471,1.695,472,0.989,473,1.695,474,1.367,475,1.151,476,1.695,477,2.624,478,1.367,479,2.116,480,2.116,481,2.116,482,1.781,483,1.151,484,0.989,485,1.695,486,1.367,487,2.454,488,2.624,489,2.624,490,2.624,491,1.695,492,1.695,493,1.695,494,1.695,495,2.624,496,2.589,497,1.695,498,1.367,499,3.21,500,1.695,501,1.695,502,1.695,503,1.695,504,1.695,505,1.695,506,1.695,507,1.695,508,1.695,509,2.624,510,2.116,511,1.695,512,1.695,513,1.695,514,1.367,515,1.367,516,1.695,517,2.624,518,0.989,519,1.367,520,2.624,521,2.624]],["title/components/NavbarComponent.html",[0,0.191,35,0.831]],["body/components/NavbarComponent.html",[0,0.266,1,0.693,2,1.131,3,0.453,4,0.386,5,0.899,6,0.899,7,0.899,8,0.386,10,1.434,11,1.642,13,1.632,14,1.467,15,3.108,16,1.024,18,2.661,19,1.616,22,2.24,23,1.024,24,1.265,26,1.672,28,1.675,29,2.661,35,1.265,36,1.859,37,2.661,40,0.899,41,1.966,42,1.515,44,1.287,45,1.131,46,1.131,47,1.287,51,0.265,52,0.649,54,0.552,55,0.052,57,0.79,58,0.693,59,3.108,60,0.96,64,1.808,66,1.526,71,0.827,72,0.386,73,0.79,75,1.702,76,1.17,77,1.024,78,0.453,79,0.453,80,0.79,81,1.287,82,1.287,83,0.899,84,1.642,85,0.899,86,0.758,87,0.899,88,0.693,89,0.899,90,0.605,91,0.899,92,0.605,93,1.321,94,0.899,95,0.899,96,0.605,97,0.899,98,0.605,99,0.79,100,0.899,101,0.605,102,0.79,103,0.899,104,0.899,105,0.03,106,0.03,112,1.957,130,1.926,131,2.24,144,0.867,146,3.591,147,3.393,148,1.158,153,0.605,154,0.605,159,1.635,160,1.635,161,1.926,162,0.753,166,1.131,170,1.675,172,1.287,179,1.265,180,1.926,182,4.006,183,2.704,188,2.978,199,1.265,211,1.345,215,0.899,250,1.926,270,2.456,326,1.024,337,1.87,338,2.24,342,1.713,345,1.466,356,1.926,364,1.466,367,1.675,381,1.675,383,1.957,388,1.675,390,3.239,391,0.899,445,2.24,446,2.24,456,3.145,475,2.24,522,1.859,523,3.3,524,2.661,525,2.661,526,3.3,527,3.3,528,3.3,529,2.661,530,3.854,531,4.453,532,3.854,533,3.3,534,2.305,535,3.3,536,2.661,537,2.305,538,3.3,539,2.305,540,3.3,541,3.3,542,3.3,543,3.3,544,2.661,545,3.3,546,3.3,547,3.854,548,2.305,549,2.305,550,2.305,551,2.305,552,2.305,553,2.305,554,2.305,555,2.661,556,3.3]],["title/components/PerfilComponent.html",[0,0.191,96,0.726]],["body/components/PerfilComponent.html",[0,0.191,1,0.407,2,0.752,3,0.266,4,0.226,5,0.528,6,0.528,7,0.528,8,0.226,10,1.431,11,1.541,13,1.369,14,1.392,16,1.415,19,1.599,21,1.281,24,1.313,26,1.457,27,1.49,28,1.617,30,2.005,35,0.407,40,0.528,41,1.777,42,1.369,44,0.856,45,1.353,46,0.752,47,0.856,51,0.156,52,0.431,53,1.666,54,0.586,55,0.052,56,1.197,57,0.464,58,1.052,60,1.02,64,1.08,66,1.285,68,1.49,71,0.737,72,0.226,75,1.353,76,0.687,77,0.601,78,0.266,79,0.266,80,0.464,81,0.856,82,0.856,83,0.528,84,1.242,85,0.528,86,0.859,87,0.528,88,0.407,89,0.528,90,0.355,91,0.528,92,0.355,93,0.464,94,0.528,95,0.528,96,0.836,97,0.528,98,0.355,99,0.464,100,0.528,101,0.355,102,0.464,103,0.528,104,0.528,105,0.02,106,0.02,126,0.528,127,1.127,131,3.269,140,1.278,142,2.232,144,0.576,148,0.832,151,1.353,153,0.727,154,0.727,158,0.918,159,1.65,160,1.611,161,1.281,162,0.97,163,1.769,164,1.617,166,1.2,169,0.687,170,0.687,172,1.08,179,1.236,194,2.158,199,1.343,212,1.052,215,1.242,218,0.528,219,2.232,250,0.79,267,1.091,270,1.281,272,1.49,277,2.162,291,0.687,326,0.601,328,1.114,329,2.386,333,2.386,334,2.659,335,1.281,336,2.811,337,1.828,342,1.23,343,1.616,344,1.616,345,0.975,350,1.281,351,1.859,352,0.79,353,2.043,358,2.55,359,0.79,360,1.616,362,1.281,363,1.281,364,0.975,367,1.114,368,1.49,372,1.281,374,2.481,376,1.616,377,1.281,381,1.114,383,0.687,384,0.79,387,2.043,389,2.043,391,0.528,392,1.281,393,0.687,394,0.687,397,0.79,398,1.281,399,1.281,401,0.79,402,0.79,403,0.79,408,1.114,409,1.903,411,1.903,413,1.903,414,0.687,419,2.386,423,1.281,430,1.281,437,2.232,438,1.769,440,1.49,445,1.49,446,1.49,447,1.769,448,1.769,456,2.162,472,0.79,474,1.091,478,2.232,479,1.769,480,1.091,481,1.091,483,0.918,484,0.79,486,1.091,496,1.091,514,1.769,515,2.232,518,0.79,519,1.091,525,1.091,544,2.232,557,1.091,558,3.185,559,2.194,560,2.768,561,2.194,562,3.501,563,2.768,564,3.185,565,1.769,566,3.185,567,3.185,568,2.194,569,2.194,570,1.353,571,1.49,572,1.353,573,1.769,574,3.428,575,1.353,576,1.769,577,2.232,578,1.769,579,1.769,580,1.769,581,1.353,582,1.353,583,2.768,584,2.194,585,1.769,586,1.353,587,1.353,588,2.194,589,2.194,590,3.185,591,1.353,592,1.353,593,2.194,594,1.353,595,1.353,596,2.194,597,3.185,598,1.091,599,1.091,600,1.091,601,1.091,602,1.091,603,2.043,604,2.194,605,0.918,606,1.091,607,1.091,608,1.091,609,1.091,610,1.091,611,1.091,612,1.091,613,1.091,614,1.091,615,1.353,616,1.353,617,1.353,618,1.091,619,1.353,620,1.353,621,1.353,622,2.194,623,1.353,624,1.353,625,1.353,626,1.091,627,2.162,628,2.568,629,1.353,630,1.769,631,1.091,632,1.769,633,1.091,634,1.091,635,1.091,636,1.091,637,1.353,638,2.768,639,1.353,640,1.353,641,1.353,642,1.353,643,1.353,644,1.353,645,1.353,646,1.353,647,1.353,648,1.353,649,1.353,650,1.353,651,1.353,652,1.353,653,1.353,654,1.091,655,1.353,656,1.353,657,1.353,658,1.353,659,1.353,660,1.353,661,1.353,662,1.353,663,1.353,664,2.568,665,3.791,666,3.023,667,3.317,668,1.49,669,3.791,670,3.023,671,2.568,672,1.769,673,1.769,674,1.769,675,1.769,676,1.769,677,1.769,678,3.185,679,1.49,680,1.769,681,1.769,682,1.769,683,1.769,684,1.769,685,1.769,686,1.769,687,1.769,688,1.769]],["title/components/RecuperarContrasenaComponent.html",[0,0.191,98,0.726]],["body/components/RecuperarContrasenaComponent.html",[0,0.244,1,0.595,2,1.012,3,0.389,4,0.331,5,0.773,6,0.773,7,0.773,8,0.331,10,1.437,11,1.527,13,1.557,14,1.484,16,1.312,19,1.484,23,1.312,24,1.177,26,1.732,30,1.987,35,0.595,40,0.773,41,1.898,42,1.463,44,1.152,45,1.342,46,1.012,47,1.152,51,0.228,52,0.581,53,1.74,54,0.591,55,0.052,56,0.928,60,0.956,64,1.152,66,0.679,71,0.863,72,0.331,73,0.679,78,0.389,79,0.389,80,0.679,81,1.152,82,1.152,83,0.773,84,1.527,85,0.773,86,0.77,87,0.773,88,0.595,89,0.773,90,0.52,91,0.773,92,0.52,93,0.679,94,0.773,95,0.773,96,0.52,97,0.773,98,1.028,99,1.693,100,0.773,101,0.52,102,0.679,103,0.773,104,0.773,105,0.027,106,0.027,121,2.982,126,0.773,127,1.061,129,1.152,132,2.381,140,1.061,144,0.776,148,1.32,151,1.603,153,0.776,154,0.776,159,1.505,160,1.012,162,0.893,166,1.435,169,1.499,170,1.005,172,1.152,179,1.406,181,1.499,199,1.177,212,0.888,215,1.527,218,1.152,326,0.88,328,1.499,329,1.499,330,2.005,333,1.499,334,2.883,335,2.656,336,2.656,337,1.74,342,1.569,343,2.061,344,2.061,345,1.312,350,1.724,351,2.285,352,1.156,353,2.285,354,2.84,356,1.724,358,2.73,359,1.724,360,2.061,362,1.724,363,1.724,364,1.312,372,1.724,374,2.563,376,2.285,377,1.724,378,2.398,379,2.005,380,2.005,381,1.499,383,1.987,384,1.724,387,2.061,388,1.499,391,0.773,392,1.156,393,1.005,394,1.005,397,1.156,398,1.156,399,1.724,401,1.156,402,1.156,403,1.156,408,1.005,409,1.987,411,1.987,413,1.987,414,1.005,419,2.23,423,1.156,425,1.597,426,2.398,427,2.848,428,2.848,429,1.597,430,2.061,469,2.381,472,1.156,482,2.005,483,1.344,484,1.156,487,2.398,498,2.381,518,1.156,524,2.848,536,2.381,603,2.061,605,1.344,626,1.597,627,2.658,688,3.157,689,3.542,690,1.597,691,4.676,692,2.953,693,2.953,694,2.381,695,3.531,696,2.953,697,3.531,698,3.915,699,2.953,700,2.953,701,2.953,702,1.98,703,1.98,704,1.98,705,3.531,706,1.98,707,1.98,708,1.98,709,1.98,710,1.597,711,1.98,712,1.597,713,2.953,714,1.98,715,1.98,716,1.98,717,1.98,718,1.98,719,2.953]],["title/components/RegistroComponent.html",[0,0.191,101,0.726]],["body/components/RegistroComponent.html",[0,0.194,1,0.414,2,0.764,3,0.743,4,0.231,5,0.538,6,0.538,7,0.538,8,0.231,10,1.377,11,1.256,13,1.618,14,1.481,16,0.99,19,1.546,22,1.513,23,0.99,24,1.419,26,1.506,28,1.131,30,2.455,35,0.414,40,0.538,41,1.714,42,1.321,44,0.869,45,1.212,46,0.764,47,0.869,51,0.159,52,0.438,53,1.571,54,0.592,55,0.052,56,1.256,60,0.908,62,1.797,64,0.869,66,0.764,68,1.513,71,0.743,72,0.231,73,0.472,77,0.613,78,0.271,79,0.271,80,0.472,81,0.869,82,0.869,83,0.538,84,1.256,85,0.538,86,0.841,87,0.538,88,0.414,89,0.538,90,0.362,91,0.538,92,0.362,93,0.472,94,0.538,95,0.538,96,0.362,97,0.538,98,0.362,99,0.472,100,0.538,101,0.846,102,1.54,103,0.538,104,0.538,105,0.02,106,0.02,112,1.423,126,1.094,127,1.063,129,0.538,140,1.137,144,0.585,148,0.968,151,1.42,153,0.846,154,0.846,159,1.57,160,1.57,162,0.908,166,1.296,169,1.131,172,0.869,179,1.399,181,1.795,187,1.797,188,2.063,194,1.795,199,1.196,212,0.843,215,1.669,218,0.538,268,1.797,272,1.513,275,1.637,277,2.813,326,0.613,328,1.131,329,2.455,330,2.186,332,1.797,333,2.6,334,2.673,335,1.88,336,2.92,337,1.997,338,0.936,340,1.797,341,1.797,342,1.246,343,1.637,344,1.637,345,0.99,349,2.597,350,1.3,351,1.88,352,0.805,353,1.88,354,2.418,356,1.3,357,1.797,358,2.673,359,1.3,360,1.637,361,1.797,362,1.3,363,1.3,364,1.431,365,1.797,367,1.131,368,1.513,369,1.797,370,1.797,371,2.597,372,1.3,374,2.207,375,1.797,376,1.88,377,1.3,378,1.513,379,1.513,380,1.513,381,1.131,383,1.131,384,1.3,386,1.797,387,2.063,388,1.131,389,1.88,390,1.513,391,0.538,392,1.3,393,0.7,394,0.7,395,1.112,397,0.805,398,2.063,399,2.207,401,0.805,402,0.805,403,0.805,408,0.7,409,1.423,410,1.112,411,2.02,413,2.02,414,1.92,419,2.103,421,2.261,422,1.797,430,1.88,440,1.513,452,1.904,472,0.805,475,1.513,482,0.936,518,0.805,555,3.05,565,1.797,571,1.513,573,1.797,574,3.05,576,3.05,577,2.261,578,1.797,579,2.597,580,1.797,585,1.797,598,1.112,599,1.112,600,1.112,601,1.112,602,1.112,603,1.637,605,0.936,606,1.112,607,1.112,608,1.112,609,1.112,610,1.112,611,1.112,612,1.112,613,1.112,614,1.112,627,2.567,628,1.797,630,1.797,631,1.112,632,1.797,633,1.112,634,1.112,635,1.112,636,1.112,664,3.05,665,3.808,666,3.05,667,3.341,668,1.513,669,3.808,670,3.05,671,2.597,672,1.797,673,1.797,674,1.797,675,1.797,676,1.797,677,1.797,679,1.513,680,1.797,681,1.797,682,1.797,683,1.797,684,1.797,685,1.797,686,1.797,687,1.797,694,1.797,720,1.112,721,2.228,722,2.228,723,2.804,724,2.228,725,2.804,726,2.228,727,2.228,728,2.228,729,2.228,730,1.378,731,1.378,732,1.378,733,2.228,734,1.378,735,2.228,736,2.228,737,2.228,738,3.535,739,1.378,740,4.143,741,2.228,742,2.228,743,1.378,744,1.378,745,1.378,746,2.804,747,1.378,748,1.378,749,1.378,750,1.378,751,1.378,752,1.378,753,1.378,754,1.378,755,1.378,756,1.378,757,1.378,758,1.378,759,2.228,760,2.228,761,2.228,762,2.228]],["title/injectables/UserService.html",[137,0.831,151,0.948]],["body/injectables/UserService.html",[3,0.526,4,0.448,8,0.448,43,1.357,51,0.308,52,0.72,54,0.892,55,0.052,56,1.378,57,0.916,58,0.804,60,1.156,71,0.821,72,0.448,78,0.526,79,0.526,86,0.955,105,0.033,106,0.033,127,1.255,129,1.428,137,1.1,138,1.357,140,1.255,141,3.367,144,0.962,148,0.804,149,1.815,150,3.049,151,1.255,153,1.276,154,1.276,155,2.486,159,0.916,160,1.255,162,1.108,166,0.916,179,1.1,180,3.109,184,2.953,185,3.621,191,2.953,193,2.486,194,1.859,201,1.859,204,1.815,207,1.561,210,1.561,211,1.561,212,1.562,218,1.043,256,3.621,257,3.367,258,2.953,259,2.953,261,2.953,262,2.953,264,2.156,275,1.561,291,1.357,452,2.835,484,2.137,487,1.815,510,2.953,571,1.815,603,1.561,618,2.953,654,2.953,710,2.156,712,2.953,763,2.156,764,3.661,765,3.661,766,4.491,767,3.661,768,3.661,769,3.661,770,3.661,771,2.674,772,3.661,773,2.674,774,2.674,775,2.674,776,3.661,777,2.674,778,3.661,779,2.674,780,3.661,781,2.674,782,2.674,783,2.674,784,4.175,785,4.491,786,2.674,787,3.661,788,3.661,789,3.661,790,2.674,791,2.674,792,4.175,793,2.674,794,2.674,795,3.661,796,4.491,797,3.661,798,3.661,799,2.674,800,2.674,801,2.674]],["title/coverage.html",[802,3.021]],["body/coverage.html",[0,0.372,1,1.076,8,0.599,9,2.886,35,1.076,42,1.076,54,0.599,55,0.051,75,1.226,88,1.076,90,0.94,92,0.94,96,0.94,98,0.94,101,0.94,105,0.04,106,0.04,117,2.43,121,2.43,137,1.51,139,2.886,151,1.226,201,1.817,222,2.089,223,2.886,297,2.43,298,2.886,299,2.886,327,2.886,435,2.886,436,2.886,522,2.886,557,2.886,668,2.43,689,2.886,690,2.886,720,2.886,763,2.886,802,2.886,803,3.579,804,3.579,805,3.579,806,3.571,807,4.428,808,5.387,809,5.26,810,2.43,811,5.163,812,3.579,813,3.571,814,5.024,815,2.886,816,2.886,817,2.886,818,2.886,819,3.579,820,3.579,821,3.579,822,4.428,823,4.428,824,3.579,825,3.579,826,3.579,827,3.579,828,3.579,829,3.579,830,3.579,831,3.579,832,3.579,833,2.886,834,2.089,835,3.579,836,3.579]],["title/dependencies.html",[837,1.577,838,2.252]],["body/dependencies.html",[55,0.052,72,0.663,73,1.357,105,0.043,106,0.043,125,3.193,126,1.837,207,2.311,391,1.545,393,2.01,834,2.311,838,2.688,839,3.96,840,5.52,841,3.96,842,5.025,843,4.708,844,3.96,845,3.193,846,3.96,847,3.193,848,3.96,849,3.96,850,3.96,851,3.96,852,3.96,853,3.96,854,3.96,855,3.96,856,3.96,857,3.96,858,3.96,859,3.96]],["title/miscellaneous/functions.html",[860,1.356,861,2.675]],["body/miscellaneous/functions.html",[42,1.558,51,0.491,55,0.049,105,0.045,106,0.045,162,1.122,199,1.283,806,4.18,810,3.519,860,2.491,861,3.442,862,4.268]],["title/index.html",[51,0.267,863,2.322,864,2.322]],["body/index.html",[0,0.337,4,0.618,33,3.932,55,0.041,86,0.726,105,0.041,106,0.041,201,1.875,529,2.978,810,3.537,837,2.507,845,3.641,847,2.978,865,3.693,866,4.515,867,3.693,868,4.876,869,2.978,870,3.693,871,5.367,872,3.693,873,3.693,874,3.693,875,3.693,876,3.693,877,3.693,878,3.693,879,3.693,880,3.693,881,3.693,882,3.693,883,4.876,884,4.876,885,3.693,886,5.08,887,3.693,888,3.693,889,3.693,890,3.693,891,4.515,892,4.515,893,5.08,894,3.693,895,4.515,896,4.515,897,3.693,898,5.301,899,3.693,900,3.693,901,3.693,902,4.515,903,3.693,904,3.693,905,3.693,906,3.693,907,3.693,908,3.693,909,4.876,910,3.693,911,3.693,912,3.693,913,2.978,914,2.507,915,3.693,916,3.693]],["title/modules.html",[109,2.543]],["body/modules.html",[55,0.046,105,0.046,106,0.046,108,2.969,109,2.969,318,3.526,917,4.373,918,4.373]],["title/overview.html",[914,2.543]],["body/overview.html",[2,1.463,55,0.045,80,1.463,105,0.045,106,0.045,107,3.967,136,3.442,138,2.167,291,2.167,679,2.897,834,2.491,838,2.897,913,3.442,914,2.897,919,4.268,920,3.442,921,4.919,922,4.268,923,4.268]],["title/properties.html",[52,0.652,837,1.577]],["body/properties.html",[52,0.861,55,0.048,105,0.046,106,0.046,869,3.533,924,4.381]],["title/miscellaneous/variables.html",[860,1.356,925,2.675]],["body/miscellaneous/variables.html",[45,1.362,51,0.457,54,0.79,55,0.052,57,1.784,58,1.565,105,0.043,106,0.043,813,3.204,815,4.058,816,4.058,817,3.204,818,3.805,833,3.204,834,2.754,860,2.319,920,3.805,925,3.204,926,3.973,927,3.973,928,4.718,929,4.718,930,3.973,931,3.973,932,3.973,933,3.973,934,3.973,935,3.973,936,3.973,937,3.973]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0.14.10",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":291,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":924,"title":{},"body":{"properties.html":{}}}],["1.amazonaws.com/cursos.json",{"_index":263,"title":{},"body":{"injectables/CursosService.html":{}}}],["1.amazonaws.com/user.json",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["1/10",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":668,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["100",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":676,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["11.14.5",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["12.4.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["15/28",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":671,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["18.2.0",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":847,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":474,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["2.11.8",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{}}}],["33",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":923,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["5.3.3",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":680,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["7.8.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":679,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"overview.html":{}}}],["8/8",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["9])(?=.*[!@#$%^&*()_",{"_index":613,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["abstractcontrol",{"_index":577,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["acceso",{"_index":443,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["acción",{"_index":498,"title":{},"body":{"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["actual",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilComponent.html":{}}}],["actual_component",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["actualiza",{"_index":270,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["actualizada",{"_index":465,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["actualizado",{"_index":657,"title":{},"body":{"components/PerfilComponent.html":{}}}],["actualizar",{"_index":250,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["actúa",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":905,"title":{},"body":{"index.html":{}}}],["addcurso",{"_index":226,"title":{},"body":{"injectables/CursosService.html":{}}}],["addcurso(categoryid",{"_index":233,"title":{},"body":{"injectables/CursosService.html":{}}}],["agrega",{"_index":274,"title":{},"body":{"injectables/CursosService.html":{}}}],["ahora",{"_index":752,"title":{},"body":{"components/RegistroComponent.html":{}}}],["al",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["alerta",{"_index":740,"title":{},"body":{"components/RegistroComponent.html":{}}}],["almacena",{"_index":594,"title":{},"body":{"components/PerfilComponent.html":{}}}],["almacenamiento",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{}}}],["almacenan",{"_index":722,"title":{},"body":{"components/RegistroComponent.html":{}}}],["alterna",{"_index":637,"title":{},"body":{"components/PerfilComponent.html":{}}}],["angular",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["api/categorias/${categoryid}/inscribircurso",{"_index":293,"title":{},"body":{"injectables/CursosService.html":{}}}],["apiurl",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["app",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":876,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":259,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["applicationconfig",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":108,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["archivo",{"_index":271,"title":{},"body":{"injectables/CursosService.html":{}}}],["array",{"_index":513,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["artifacts",{"_index":887,"title":{},"body":{"index.html":{}}}],["asistir",{"_index":499,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["asistircurso",{"_index":453,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["asistircurso(curso",{"_index":459,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["autentica",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{}}}],["autenticación",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{}}}],["autenticado",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["autenticarse",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice",{"_index":75,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":877,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":527,"title":{},"body":{"components/NavbarComponent.html":{}}}],["available",{"_index":318,"title":{},"body":{"injectables/LocalStorageService.html":{},"modules.html":{}}}],["backend",{"_index":487,"title":{},"body":{"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"injectables/UserService.html":{}}}],["barra",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["basadas",{"_index":550,"title":{},"body":{"components/NavbarComponent.html":{}}}],["behaviorsubject",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["bootstrap",{"_index":834,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":918,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["bucket",{"_index":616,"title":{},"body":{"components/PerfilComponent.html":{}}}],["build",{"_index":886,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":505,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["c.name",{"_index":508,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["called",{"_index":319,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cambios",{"_index":515,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["campo",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["campos",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["cancelar",{"_index":688,"title":{},"body":{"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["capabilities",{"_index":907,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":669,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["carga",{"_index":478,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["cargar",{"_index":496,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["carácter",{"_index":685,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["caso",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["cat.id",{"_index":284,"title":{},"body":{"injectables/CursosService.html":{}}}],["categories",{"_index":254,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{}}}],["categories.find((cat",{"_index":283,"title":{},"body":{"injectables/CursosService.html":{}}}],["categories.foreach((category",{"_index":490,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["category",{"_index":282,"title":{},"body":{"injectables/CursosService.html":{}}}],["category.courses.find((c",{"_index":507,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["category.courses.foreach((course",{"_index":491,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["category.courses.push(course",{"_index":285,"title":{},"body":{"injectables/CursosService.html":{}}}],["category.courses.splice(courseid",{"_index":290,"title":{},"body":{"injectables/CursosService.html":{}}}],["category.courses[courseid",{"_index":288,"title":{},"body":{"injectables/CursosService.html":{}}}],["categoryid",{"_index":236,"title":{},"body":{"injectables/CursosService.html":{}}}],["categoría",{"_index":278,"title":{},"body":{"injectables/CursosService.html":{}}}],["categorías",{"_index":252,"title":{},"body":{"injectables/CursosService.html":{}}}],["cerrar",{"_index":556,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":879,"title":{},"body":{"index.html":{}}}],["check",{"_index":912,"title":{},"body":{"index.html":{}}}],["checkusercredentials",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["checkusercredentials(credentials",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["checkuserexists",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["checkuserexists(email",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["choice",{"_index":901,"title":{},"body":{"index.html":{}}}],["ciclo",{"_index":540,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cierra",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["cierre",{"_index":538,"title":{},"body":{"components/NavbarComponent.html":{}}}],["class",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":868,"title":{},"body":{"index.html":{}}}],["code",{"_index":881,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":733,"title":{},"body":{"components/RegistroComponent.html":{}}}],["coinciden",{"_index":628,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["command",{"_index":902,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["como",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["completa",{"_index":266,"title":{},"body":{"injectables/CursosService.html":{}}}],["completar",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{}}}],["completo",{"_index":272,"title":{},"body":{"injectables/CursosService.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"overview.html":{}}}],["components/index/index.component",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/mis",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["components/perfil/perfil.component",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/recuperar",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/registro/registro.component",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["con",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["config",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuradas",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["configurar",{"_index":700,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["confirmación",{"_index":576,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["confirmar",{"_index":687,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["confirmbuttontext",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["confirmpass",{"_index":632,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["confirmpassword",{"_index":574,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["console.error(err",{"_index":756,"title":{},"body":{"components/RegistroComponent.html":{}}}],["console.log('cursos",{"_index":494,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["console.log(`ingresando",{"_index":500,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["console.warn(`localstorage",{"_index":317,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["const",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":534,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(cursosservice",{"_index":457,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["constructor(fb",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["constructor(http",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["contenedor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["contener",{"_index":672,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["content",{"_index":258,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["contrario",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["contrasena",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["contrasena'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["contrasena.component",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["contrasena.component.css",{"_index":695,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena.component.html",{"_index":696,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena.component.ts",{"_index":690,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{},"coverage.html":{}}}],["contrasena.component.ts:109",{"_index":703,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena.component.ts:27",{"_index":699,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena.component.ts:54",{"_index":702,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena.component.ts:63",{"_index":704,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["contrasena/recuperar",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RecuperarContrasenaComponent.html":{},"coverage.html":{}}}],["contraseña",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["contraseñas",{"_index":627,"title":{},"body":{"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["control",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["control.dirty",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["control.invalid",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["control.touched",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["controla",{"_index":526,"title":{},"body":{"components/NavbarComponent.html":{}}}],["controlar",{"_index":545,"title":{},"body":{"components/NavbarComponent.html":{}}}],["correctamente",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{}}}],["correo",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["correspondiente",{"_index":506,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["coureka",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["course",{"_index":234,"title":{},"body":{"injectables/CursosService.html":{}}}],["course.inscritos.includes(this.username",{"_index":492,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["courseid",{"_index":238,"title":{},"body":{"injectables/CursosService.html":{}}}],["coverage",{"_index":802,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":569,"title":{},"body":{"components/PerfilComponent.html":{}}}],["credenciales",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["credentials.password",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials.usernameoremail",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["cuenta",{"_index":762,"title":{},"body":{"components/RegistroComponent.html":{}}}],["currentuser",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilComponent.html":{}}}],["curso",{"_index":276,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{}}}],["curso.description",{"_index":521,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["curso.inscritos.indexof(user.username",{"_index":511,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["curso.inscritos.splice(userindex",{"_index":512,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["curso.name",{"_index":520,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["curso.nombre",{"_index":501,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursoaeliminar",{"_index":502,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursoaeliminar.name",{"_index":509,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{}}}],["cursos'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["cursos.component",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cursos.component.css",{"_index":449,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.html",{"_index":450,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts",{"_index":436,"title":{},"body":{"components/MisCursosComponent.html":{},"coverage.html":{}}}],["cursos.component.ts:112",{"_index":460,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts:122",{"_index":463,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts:32",{"_index":471,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts:37",{"_index":458,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts:55",{"_index":470,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos.component.ts:63",{"_index":468,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursos/mis",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MisCursosComponent.html":{},"coverage.html":{}}}],["cursosinscritos",{"_index":451,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["cursosservice",{"_index":222,"title":{"injectables/CursosService.html":{}},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"coverage.html":{}}}],["datos",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["debe",{"_index":665,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["declarations",{"_index":919,"title":{},"body":{"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["deletecurso",{"_index":227,"title":{},"body":{"injectables/CursosService.html":{}}}],["deletecurso(categoryid",{"_index":237,"title":{},"body":{"injectables/CursosService.html":{}}}],["dependencias",{"_index":536,"title":{},"body":{"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["dependencies",{"_index":838,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["desde",{"_index":267,"title":{},"body":{"injectables/CursosService.html":{},"components/PerfilComponent.html":{}}}],["deshabilita",{"_index":589,"title":{},"body":{"components/PerfilComponent.html":{}}}],["dev",{"_index":873,"title":{},"body":{"index.html":{}}}],["development",{"_index":870,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["dinámicamente",{"_index":543,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dinámicas",{"_index":549,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dinámico",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["directives",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":885,"title":{},"body":{"index.html":{}}}],["directory",{"_index":890,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":597,"title":{},"body":{"components/PerfilComponent.html":{}}}],["dist",{"_index":889,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["dynamic",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":899,"title":{},"body":{"index.html":{}}}],["east",{"_index":262,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["edición",{"_index":590,"title":{},"body":{"components/PerfilComponent.html":{}}}],["edita",{"_index":287,"title":{},"body":{"injectables/CursosService.html":{}}}],["editar",{"_index":558,"title":{},"body":{"components/PerfilComponent.html":{}}}],["editcurso",{"_index":228,"title":{},"body":{"injectables/CursosService.html":{}}}],["editcurso(categoryid",{"_index":241,"title":{},"body":{"injectables/CursosService.html":{}}}],["el",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["electrónico",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["element",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["elimina",{"_index":289,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{}}}],["eliminado",{"_index":517,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["eliminando",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminar",{"_index":467,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["eliminarcurso",{"_index":454,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["eliminarcurso(index",{"_index":462,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["eliminarlos",{"_index":441,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["ellos",{"_index":444,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["email",{"_index":603,"title":{},"body":{"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["en",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["encontr",{"_index":617,"title":{},"body":{"components/PerfilComponent.html":{}}}],["encontrado",{"_index":626,"title":{},"body":{"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["end",{"_index":898,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":294,"title":{},"body":{"injectables/CursosService.html":{}}}],["enlace",{"_index":524,"title":{},"body":{"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["enrutamiento",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["entrada",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["enviado",{"_index":713,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["enviar",{"_index":719,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["envío",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["eres",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["err",{"_index":755,"title":{},"body":{"components/RegistroComponent.html":{}}}],["error",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["es",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["especial",{"_index":686,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["especiales",{"_index":675,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["específica",{"_index":279,"title":{},"body":{"injectables/CursosService.html":{}}}],["específico",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["est",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["estado",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["este",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["eventcoalescing",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evento",{"_index":735,"title":{},"body":{"components/RegistroComponent.html":{}}}],["execute",{"_index":895,"title":{},"body":{"index.html":{}}}],["existe",{"_index":710,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{},"injectables/UserService.html":{}}}],["exitosamente",{"_index":662,"title":{},"body":{"components/PerfilComponent.html":{}}}],["exitoso",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["export",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["falso",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["favor",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["fb",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["field",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":880,"title":{},"body":{"index.html":{}}}],["first",{"_index":904,"title":{},"body":{"index.html":{}}}],["forgotpasswordform",{"_index":697,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["formbuilder",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["formgroup",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["formgroup.get(confirmpassword)?.seterrors",{"_index":634,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["formgroup.get(confirmpassword)?.seterrors(null",{"_index":636,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["formgroup.get(confirmpassword)?.value",{"_index":633,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["formgroup.get(password)?.value",{"_index":631,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["formsmodule",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["formulario",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["formularios",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["fue",{"_index":625,"title":{},"body":{"components/PerfilComponent.html":{}}}],["función",{"_index":578,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["function",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":861,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":908,"title":{},"body":{"index.html":{}}}],["generate",{"_index":883,"title":{},"body":{"index.html":{}}}],["generated",{"_index":867,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":437,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["getcursos",{"_index":229,"title":{},"body":{"injectables/CursosService.html":{}}}],["getitem",{"_index":300,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":304,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":863,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":911,"title":{},"body":{"index.html":{}}}],["graph",{"_index":917,"title":{},"body":{"modules.html":{}}}],["guardados",{"_index":661,"title":{},"body":{"components/PerfilComponent.html":{}}}],["guardar",{"_index":514,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["ha",{"_index":714,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["habilita",{"_index":588,"title":{},"body":{"components/PerfilComponent.html":{}}}],["han",{"_index":659,"title":{},"body":{"components/PerfilComponent.html":{}}}],["hay",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{}}}],["headers",{"_index":256,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["help",{"_index":909,"title":{},"body":{"index.html":{}}}],["html",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["http",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":875,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["httpheaders",{"_index":257,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["httpoptions",{"_index":224,"title":{},"body":{"injectables/CursosService.html":{}}}],["https://mibucketfullstackiis3.s3.us",{"_index":261,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["hubo",{"_index":757,"title":{},"body":{"components/RegistroComponent.html":{}}}],["icon",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["identifier",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":529,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["importa",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["importar",{"_index":445,"title":{},"body":{"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["imports",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["incluir",{"_index":681,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["incluye",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["incluyendo",{"_index":559,"title":{},"body":{"components/PerfilComponent.html":{}}}],["incorrectos",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{}}}],["independiente",{"_index":523,"title":{},"body":{"components/NavbarComponent.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["indexcomponent",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["indica",{"_index":544,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["información",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["ingresa",{"_index":677,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["ingresado",{"_index":715,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["ingresar",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicia",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistroComponent.html":{}}}],["inicializa",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["inicializar",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["iniciar",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["inicio",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["initializeform",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["injectable",{"_index":137,"title":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inscribircurso",{"_index":230,"title":{},"body":{"injectables/CursosService.html":{}}}],["inscribircurso(categoryid",{"_index":245,"title":{},"body":{"injectables/CursosService.html":{}}}],["inscrito",{"_index":476,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["inscritos",{"_index":439,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["interactuar",{"_index":701,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["introduce",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["inténtalo",{"_index":518,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["inválido",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["ir",{"_index":754,"title":{},"body":{"components/RegistroComponent.html":{}}}],["isediting",{"_index":562,"title":{},"body":{"components/PerfilComponent.html":{}}}],["isfieldinvalid",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["isfieldinvalid(field",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["islocalstorageavailable",{"_index":301,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["isloggedin",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["item",{"_index":320,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json",{"_index":268,"title":{},"body":{"injectables/CursosService.html":{},"components/RegistroComponent.html":{}}}],["json.parse(item",{"_index":322,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":324,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jsonurl",{"_index":225,"title":{},"body":{"injectables/CursosService.html":{}}}],["karma",{"_index":897,"title":{},"body":{"index.html":{}}}],["key",{"_index":306,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["las",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["legend",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"overview.html":{}}}],["lista",{"_index":265,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{}}}],["literal",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["lo",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["loadcurrentuser",{"_index":564,"title":{},"body":{"components/PerfilComponent.html":{}}}],["loadcursosinscritos",{"_index":455,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["local",{"_index":464,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["localstorage.getitem(key",{"_index":321,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":325,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":323,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":297,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["loggedinsubject",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinuser",{"_index":479,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["loggedinuser.email",{"_index":621,"title":{},"body":{"components/PerfilComponent.html":{}}}],["loggedinuser.username",{"_index":486,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["login",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["login(credentials",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["login.component.css",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":90,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logueado",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["los",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["maneja",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["manejar",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["map",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["map((users",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchpasswords",{"_index":565,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["matchpasswords(password",{"_index":573,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["mayúscula",{"_index":682,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["mediante",{"_index":693,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["menos",{"_index":667,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["mensaje",{"_index":741,"title":{},"body":{"components/RegistroComponent.html":{}}}],["mensajes",{"_index":584,"title":{},"body":{"components/PerfilComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["methods",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["minúscula",{"_index":683,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["mis",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["miscellaneous",{"_index":860,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miscursoscomponent",{"_index":92,"title":{"components/MisCursosComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["modo",{"_index":593,"title":{},"body":{"components/PerfilComponent.html":{}}}],["module",{"_index":107,"title":{"modules/AppRoutingModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":109,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["more",{"_index":910,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":548,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mostrar",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["muestra",{"_index":440,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["más",{"_index":717,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["módulo",{"_index":446,"title":{},"body":{"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":531,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["navbar.component.css",{"_index":532,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":533,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":35,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["navigate",{"_index":874,"title":{},"body":{"index.html":{}}}],["ndice",{"_index":466,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["necesarios",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["need",{"_index":903,"title":{},"body":{"index.html":{}}}],["new",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newuser",{"_index":750,"title":{},"body":{"components/RegistroComponent.html":{}}}],["next",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["ng",{"_index":871,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":456,"title":{},"body":{"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["ni",{"_index":674,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["nomatch",{"_index":635,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["nombre",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["nueva",{"_index":678,"title":{},"body":{"components/PerfilComponent.html":{}}}],["nuevamente",{"_index":519,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["nuevo",{"_index":275,"title":{},"body":{"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["null",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{}}}],["number",{"_index":239,"title":{},"body":{"injectables/CursosService.html":{},"components/MisCursosComponent.html":{}}}],["número",{"_index":684,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["números",{"_index":673,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["o",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["object",{"_index":255,"title":{},"body":{"injectables/CursosService.html":{}}}],["objeto",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{}}}],["obligatoria",{"_index":759,"title":{},"body":{"components/RegistroComponent.html":{}}}],["obligatorio",{"_index":664,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["observable",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["observar",{"_index":528,"title":{},"body":{"components/NavbarComponent.html":{}}}],["obtener",{"_index":481,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["obtiene",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{}}}],["ok",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["olvidaste",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{}}}],["oncancel",{"_index":698,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["oninit",{"_index":530,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["opcional",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["opciones",{"_index":547,"title":{},"body":{"components/NavbarComponent.html":{}}}],["optional",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["originales",{"_index":646,"title":{},"body":{"components/PerfilComponent.html":{}}}],["otro",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":913,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overview",{"_index":914,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":837,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":916,"title":{},"body":{"index.html":{}}}],["para",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["param",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["parameters",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":630,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["path",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perfil",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["perfil'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["perfil.component.css",{"_index":560,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.html",{"_index":561,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":96,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["permite",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["personalizada",{"_index":580,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["personalizadas",{"_index":721,"title":{},"body":{"components/RegistroComponent.html":{}}}],["plantilla",{"_index":448,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["platform",{"_index":900,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["principal",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["principalmente",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["problema",{"_index":758,"title":{},"body":{"components/RegistroComponent.html":{}}}],["procesar",{"_index":705,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["profileform",{"_index":563,"title":{},"body":{"components/PerfilComponent.html":{}}}],["project",{"_index":866,"title":{},"body":{"index.html":{}}}],["properties",{"_index":52,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["proporcionadas",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["proporcionando",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["proveedor",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["provideclienthydration",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withfetch",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":920,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyectoangular",{"_index":865,"title":{},"body":{"index.html":{}}}],["pudieron",{"_index":495,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["pudo",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["puede",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["puedes",{"_index":753,"title":{},"body":{"components/RegistroComponent.html":{}}}],["punto",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["página",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["que",{"_index":475,"title":{},"body":{"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["raíz",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["rea",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":344,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["reactivo",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["reactivos",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["recuperación",{"_index":691,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["recuperar",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["recuperarcontrasenacomponent",{"_index":98,"title":{"components/RecuperarContrasenaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["redirectto",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":469,"title":{},"body":{"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["redirigido",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["redirigiendo",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{}}}],["reference",{"_index":915,"title":{},"body":{"index.html":{}}}],["registerform",{"_index":725,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registeruser",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["registra",{"_index":736,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrado",{"_index":716,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["registrados",{"_index":729,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrar",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["registrarse",{"_index":555,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["registro",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["registro.component.css",{"_index":723,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro.component.html",{"_index":724,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrocomponent",{"_index":101,"title":{"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["regístrate",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":878,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":302,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":308,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["requeridos",{"_index":728,"title":{},"body":{"components/RegistroComponent.html":{}}}],["reset",{"_index":922,"title":{},"body":{"overview.html":{}}}],["resetform",{"_index":566,"title":{},"body":{"components/PerfilComponent.html":{}}}],["restablece",{"_index":644,"title":{},"body":{"components/PerfilComponent.html":{}}}],["results",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":746,"title":{},"body":{"components/RegistroComponent.html":{}}}],["root",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["router",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["routermodule",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["routermodule.forroot(routes",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":891,"title":{},"body":{"index.html":{}}}],["rutas",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["rxjs",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":882,"title":{},"body":{"index.html":{}}}],["se",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["seleccionado",{"_index":461,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["selector",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["ser",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":872,"title":{},"body":{"index.html":{}}}],["server",{"_index":845,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth.service",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["services/cursos.service",{"_index":473,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["services/user.service",{"_index":472,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["servicio",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["servicios",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["sesión",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["setitem",{"_index":303,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":310,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["showalert",{"_index":726,"title":{},"body":{"components/RegistroComponent.html":{}}}],["showalert(title",{"_index":737,"title":{},"body":{"components/RegistroComponent.html":{}}}],["showconfirmbutton",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{}}}],["si",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["sido",{"_index":660,"title":{},"body":{"components/PerfilComponent.html":{}}}],["simula",{"_index":497,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["simulado",{"_index":295,"title":{},"body":{"injectables/CursosService.html":{}}}],["simular",{"_index":442,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["sistema",{"_index":525,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["sobrepasar",{"_index":670,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["solicitar",{"_index":692,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["solicitud",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["src/.../app.config.server.ts",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:30",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/index/index.component.ts",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:50",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:64",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:74",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/mis",{"_index":435,"title":{},"body":{"components/MisCursosComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":522,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":535,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:48",{"_index":539,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:58",{"_index":537,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts",{"_index":557,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts:141",{"_index":575,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:158",{"_index":587,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:174",{"_index":586,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:194",{"_index":570,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:203",{"_index":582,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:31",{"_index":592,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:36",{"_index":591,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:41",{"_index":568,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:88",{"_index":581,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:95",{"_index":572,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/recuperar",{"_index":689,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{},"coverage.html":{}}}],["src/app/components/registro/registro.component.ts",{"_index":720,"title":{},"body":{"components/RegistroComponent.html":{},"coverage.html":{}}}],["src/app/components/registro/registro.component.ts:100",{"_index":739,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:117",{"_index":732,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:136",{"_index":731,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:146",{"_index":734,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:28",{"_index":727,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:50",{"_index":730,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:42",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:57",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/cursos.service.ts",{"_index":223,"title":{},"body":{"injectables/CursosService.html":{},"coverage.html":{}}}],["src/app/services/cursos.service.ts:15",{"_index":232,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:22",{"_index":244,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:30",{"_index":248,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:39",{"_index":235,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:54",{"_index":243,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:69",{"_index":240,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:81",{"_index":246,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/cursos.service.ts:9",{"_index":260,"title":{},"body":{"injectables/CursosService.html":{}}}],["src/app/services/user.service.ts",{"_index":763,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:31",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:48",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:61",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:65",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:9",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/local",{"_index":298,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["started",{"_index":864,"title":{"index.html":{}},"body":{}}],["statements",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":553,"title":{},"body":{"components/NavbarComponent.html":{}}}],["storage.service.ts",{"_index":299,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":305,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:20",{"_index":311,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:28",{"_index":309,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":307,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":888,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["styleurl",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["su",{"_index":694,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["subscribe",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["sus",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["suscribe",{"_index":542,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swal",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["swal.fire",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["sweetalert2",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["sweetalert2/ngx",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["sweetalert2module",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sweetalert2module.forroot",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["switchmap",{"_index":264,"title":{},"body":{"injectables/CursosService.html":{},"injectables/UserService.html":{}}}],["switchmap((categories",{"_index":281,"title":{},"body":{"injectables/CursosService.html":{}}}],["switchmap((updatedusers",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((user",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["tarde",{"_index":718,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["templateurl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["tener",{"_index":666,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["test",{"_index":894,"title":{},"body":{"index.html":{}}}],["testing",{"_index":906,"title":{},"body":{"index.html":{}}}],["tests",{"_index":893,"title":{},"body":{"index.html":{}}}],["text",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["this.authservice.getuser",{"_index":480,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["this.authservice.isloggedin$().subscribe((status",{"_index":551,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":554,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.currentuser",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilComponent.html":{}}}],["this.currentuser.email",{"_index":624,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.currentuser.name",{"_index":623,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.currentuser.password",{"_index":655,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.currentuser?.email",{"_index":604,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.currentuser?.name",{"_index":596,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.cursosinscritos",{"_index":489,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.cursosinscritos.push(course",{"_index":493,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.cursosinscritos.splice(index",{"_index":504,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.cursosinscritos[index",{"_index":503,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.cursosservice.getcursos().subscribe",{"_index":488,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.cursosservice.updatecursos(categories).subscribe",{"_index":516,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.fb.group",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["this.forgotpasswordform",{"_index":706,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["this.forgotpasswordform.get('email')?.value",{"_index":709,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["this.forgotpasswordform.get(field",{"_index":707,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["this.forgotpasswordform.invalid",{"_index":708,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["this.getcursos().pipe",{"_index":280,"title":{},"body":{"injectables/CursosService.html":{}}}],["this.getusers().pipe",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/exists?email=${email}&username=${username",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.apiurl).pipe",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.jsonurl",{"_index":269,"title":{},"body":{"injectables/CursosService.html":{}}}],["this.http.put(this.apiurl",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.jsonurl",{"_index":273,"title":{},"body":{"injectables/CursosService.html":{}}}],["this.http.put(url",{"_index":296,"title":{},"body":{"injectables/CursosService.html":{}}}],["this.initializeform",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["this.isediting",{"_index":638,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.islocalstorageavailable",{"_index":316,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.isloggedin",{"_index":552,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadcurrentuser",{"_index":615,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.loadcursosinscritos",{"_index":477,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.loggedinsubject.asobservable",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinsubject.next(false",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinsubject.next(true",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinsubject.value",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(field",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.matchpasswords('password",{"_index":614,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["this.profileform",{"_index":595,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('confirmpassword')?.disable",{"_index":650,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('confirmpassword')?.enable",{"_index":642,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('email')?.disable",{"_index":648,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('email')?.enable",{"_index":640,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('name')?.disable",{"_index":647,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('name')?.enable",{"_index":639,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('password')?.disable",{"_index":649,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get('password')?.enable",{"_index":641,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.get(field",{"_index":651,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.getrawvalue",{"_index":653,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.invalid",{"_index":652,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.profileform.patchvalue",{"_index":622,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.registerform",{"_index":743,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.registerform.get(field",{"_index":747,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.registerform.invalid",{"_index":748,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.registerform.value",{"_index":749,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.resetform",{"_index":643,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.router.navigate(['/index",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":482,"title":{},"body":{"components/MisCursosComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["this.toggleeditmode",{"_index":663,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.updatecursos(categories",{"_index":286,"title":{},"body":{"injectables/CursosService.html":{}}}],["this.username",{"_index":485,"title":{},"body":{"components/MisCursosComponent.html":{}}}],["this.userservice.checkusercredentials(credentials).pipe",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getusers().subscribe",{"_index":483,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["this.userservice.registeruser(newuser).subscribe",{"_index":751,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.userservice.updateuser(updateduser).subscribe",{"_index":656,"title":{},"body":{"components/PerfilComponent.html":{}}}],["tienes",{"_index":761,"title":{},"body":{"components/RegistroComponent.html":{}}}],["timer",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":742,"title":{},"body":{"components/RegistroComponent.html":{}}}],["title",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["toggleeditmode",{"_index":567,"title":{},"body":{"components/PerfilComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{}}}],["tus",{"_index":658,"title":{},"body":{"components/PerfilComponent.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":312,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["título",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/RegistroComponent.html":{}}}],["u",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["u.email",{"_index":712,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{},"injectables/UserService.html":{}}}],["u.password",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["u.username",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["un",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["una",{"_index":277,"title":{},"body":{"injectables/CursosService.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["undefined",{"_index":314,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["unit",{"_index":892,"title":{},"body":{"index.html":{}}}],["updatecursos",{"_index":231,"title":{},"body":{"injectables/CursosService.html":{}}}],["updatecursos(categories",{"_index":247,"title":{},"body":{"injectables/CursosService.html":{}}}],["updatedcourse",{"_index":242,"title":{},"body":{"injectables/CursosService.html":{}}}],["updateduser",{"_index":654,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UserService.html":{}}}],["updateduser.username",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedusers",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":292,"title":{},"body":{"injectables/CursosService.html":{}}}],["usagenotes",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["usar",{"_index":447,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["use",{"_index":884,"title":{},"body":{"index.html":{}}}],["user",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":620,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user.service",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":619,"title":{},"body":{"components/PerfilComponent.html":{}}}],["userindex",{"_index":510,"title":{},"body":{"components/MisCursosComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":452,"title":{},"body":{"components/MisCursosComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["usernameoremail",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":484,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"injectables/UserService.html":{}}}],["users.find",{"_index":618,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UserService.html":{}}}],["users.find((u",{"_index":711,"title":{},"body":{"components/RecuperarContrasenaComponent.html":{}}}],["users.findindex((u",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["users.push(user",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["users[userindex",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":151,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usuario",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["usuarios",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["utiliza",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["utilizado",{"_index":249,"title":{},"body":{"injectables/CursosService.html":{}}}],["utilizando",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["valida",{"_index":583,"title":{},"body":{"components/PerfilComponent.html":{}}}],["validaciones",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["validación",{"_index":579,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validar",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["validatorfn",{"_index":629,"title":{},"body":{"components/PerfilComponent.html":{}}}],["validators",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.email",{"_index":605,"title":{},"body":{"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.maxlength(150",{"_index":602,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.maxlength(254",{"_index":607,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.maxlength(50",{"_index":745,"title":{},"body":{"components/RegistroComponent.html":{}}}],["validators.maxlength(64",{"_index":609,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.minlength(10",{"_index":601,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.minlength(11",{"_index":606,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.minlength(5",{"_index":744,"title":{},"body":{"components/RegistroComponent.html":{}}}],["validators.minlength(8",{"_index":608,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":610,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.pattern(/^[a",{"_index":598,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.required",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["valor",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["valores",{"_index":645,"title":{},"body":{"components/PerfilComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"injectables/LocalStorageService.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["variable",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":925,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varias",{"_index":251,"title":{},"body":{"injectables/CursosService.html":{}}}],["verdadero",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifica",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["verificar",{"_index":571,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"injectables/UserService.html":{}}}],["version",{"_index":869,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":253,"title":{},"body":{"injectables/CursosService.html":{}}}],["via",{"_index":896,"title":{},"body":{"index.html":{}}}],["vida",{"_index":541,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visibilidad",{"_index":546,"title":{},"body":{"components/NavbarComponent.html":{}}}],["vistas",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["visualizar",{"_index":438,"title":{},"body":{"components/MisCursosComponent.html":{},"components/PerfilComponent.html":{}}}],["void",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["válido",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["warning",{"_index":738,"title":{},"body":{"components/RegistroComponent.html":{}}}],["window",{"_index":313,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.localstorage",{"_index":315,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["xito",{"_index":585,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["y",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CursosService.html":{},"components/LoginComponent.html":{},"components/MisCursosComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RecuperarContrasenaComponent.html":{},"components/RegistroComponent.html":{}}}],["ya",{"_index":760,"title":{},"body":{"components/RegistroComponent.html":{}}}],["z])(?=.*[0",{"_index":612,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["z])(?=.*[a",{"_index":611,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["za",{"_index":599,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["zone.js",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":921,"title":{},"body":{"overview.html":{}}}],["záéíóúáéíóúññ\\s",{"_index":600,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz de la aplicación.\nEste componente actúa como el contenedor principal de la aplicación.\nIncluye el componente de navegación y el área para mostrar las rutas.\n\nEste componente es el punto de entrada de la aplicación Angular.\nImporta el NavbarComponent para la barra de navegación.\nUtiliza el RouterOutlet para mostrar las rutas configuradas.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'coureka !'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n            \n                \n                    Título de la aplicación.\nEste valor se utiliza principalmente en las vistas y puede ser dinámico.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AuthService } from './services/auth.service';\n\n/**\n * Componente raíz de la aplicación.\n * \n * Este componente actúa como el contenedor principal de la aplicación.\n * Incluye el componente de navegación y el área para mostrar las rutas.\n * \n * @usageNotes\n * - Este componente es el punto de entrada de la aplicación Angular.\n * - Importa el `NavbarComponent` para la barra de navegación.\n * - Utiliza el `RouterOutlet` para mostrar las rutas configuradas.\n */\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css',\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación.\n   * Este valor se utiliza principalmente en las vistas y puede ser dinámico.\n   */\n  title = 'coureka !';\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { MisCursosComponent } from './components/mis-cursos/mis-cursos.component';\nimport { PerfilComponent } from './components/perfil/perfil.component';\nimport { RecuperarContrasenaComponent } from './components/recuperar-contrasena/recuperar-contrasena.component';\nimport { RegistroComponent } from './components/registro/registro.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\nexport const routes: Routes = [\n    {path: 'index', component: IndexComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'mis-cursos', component: MisCursosComponent},\n    {path: 'perfil', component: PerfilComponent},\n    {path: 'recuperar-contrasena', component: RecuperarContrasenaComponent},\n    {path: 'registro', component: RegistroComponent},\n    {path: '**', redirectTo: 'index'}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes), SweetAlert2Module.forRoot()],\n    exports: [RouterModule]\n  })\n  export class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                loggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedIn$\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Obtiene la información del usuario logueado.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                El usuario actual o null si no hay usuario logueado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está autenticado.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si está autenticado, falso en otro caso.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn$\n                        \n                    \n                \n            \n            \n                \nisLoggedIn$()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Devuelve un Observable con el estado de autenticación.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable del estado de autenticación.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Inicia sesión con las credenciales proporcionadas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con usernameOrEmail y password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                El usuario autenticado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Cierra sesión eliminando el usuario logueado del almacenamiento.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from './user.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = '';\n  private loggedInSubject = new BehaviorSubject(false); // Estado de autenticación\n  private currentUser: any = null;\n\n  constructor(private http: HttpClient, private userService: UserService) {}\n\n  /**\n   * Devuelve un Observable con el estado de autenticación.\n   * @returns {Observable} Observable del estado de autenticación.\n   */\n  isLoggedIn$(): Observable {\n    return this.loggedInSubject.asObservable();\n  }\n\n  /**\n   * Verifica si el usuario está autenticado.\n   * @returns {boolean} Verdadero si está autenticado, falso en otro caso.\n   */\n  isLoggedIn(): boolean {\n    return this.loggedInSubject.value;\n  }\n\n  /**\n   * Inicia sesión con las credenciales proporcionadas.\n   * @param credentials Objeto con `usernameOrEmail` y `password`.\n   * @returns {any} El usuario autenticado.\n   */\n  login(credentials: { usernameOrEmail: string; password: string }): Observable {\n    return this.userService.checkUserCredentials(credentials).pipe(\n        tap((user) => {\n            if (user) {\n                this.currentUser = user;\n                this.loggedInSubject.next(true);\n            }\n        })\n    );\n}\n\n\n  /**\n   * Cierra sesión eliminando el usuario logueado del almacenamiento.\n   */\n logout(): void {\n    this.currentUser = null;\n    this.loggedInSubject.next(false);\n  }\n\n  /**\n   * Obtiene la información del usuario logueado.\n   * @returns {any | null} El usuario actual o null si no hay usuario logueado.\n   */\n  getUser(): any {\n    return this.currentUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CursosService.html":{"url":"injectables/CursosService.html","title":"injectable - CursosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CursosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cursos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                jsonUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCurso\n                            \n                            \n                                deleteCurso\n                            \n                            \n                                editCurso\n                            \n                            \n                                getCursos\n                            \n                            \n                                inscribirCurso\n                            \n                            \n                                updateCursos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cursos.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCurso\n                        \n                    \n                \n            \n            \n                \naddCurso(categoryId: string, course: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                course\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCurso\n                        \n                    \n                \n            \n            \n                \ndeleteCurso(categoryId: string, courseId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCurso\n                        \n                    \n                \n            \n            \n                \neditCurso(categoryId: string, courseId: number, updatedCourse: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedCourse\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCursos\n                        \n                    \n                \n            \n            \n                \ngetCursos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inscribirCurso\n                        \n                    \n                \n            \n            \n                \ninscribirCurso(categoryId: string, updatedCourse: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedCourse\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCursos\n                        \n                    \n                \n            \n            \n                \nupdateCursos(categories: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursos.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Utilizado para actualizar varias categorías o cursos a la vez.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cursos.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://mibucketfullstackiis3.s3.us-east-1.amazonaws.com/cursos.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cursos.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CursosService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }),\n  };\n\n  private jsonUrl = 'https://mibucketfullstackiis3.s3.us-east-1.amazonaws.com/cursos.json';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * @description Obtiene la lista completa de categorías y cursos desde el JSON.\n   */\n  getCursos(): Observable {\n    return this.http.get(this.jsonUrl);\n  }\n\n  /**\n   * @description Actualiza el archivo JSON completo.\n   * Utilizado para actualizar varias categorías o cursos a la vez.\n   */\n updateCursos(categories: any[]): Observable {\n  const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  return this.http.put(this.jsonUrl, categories, { headers });\n}\n\n\n  /**\n   * @description Agrega un nuevo curso en una categoría específica.\n   */\n  addCurso(categoryId: string, course: any): Observable {\n    return this.getCursos().pipe(\n      switchMap((categories: any[]) => {\n        const category = categories.find((cat) => cat.id === categoryId);\n        if (category) {\n          category.courses.push(course);\n        }\n        return this.updateCursos(categories);\n      })\n    );\n  }\n\n  /**\n   * @description Edita un curso en una categoría específica.\n   */\n  editCurso(categoryId: string, courseId: number, updatedCourse: any): Observable {\n    return this.getCursos().pipe(\n      switchMap((categories: any[]) => {\n        const category = categories.find((cat) => cat.id === categoryId);\n        if (category && category.courses[courseId]) {\n          category.courses[courseId] = updatedCourse;\n        }\n        return this.updateCursos(categories);\n      })\n    );\n  }\n\n  /**\n   * @description Elimina un curso en una categoría específica.\n   */\n  deleteCurso(categoryId: string, courseId: number): Observable {\n    return this.getCursos().pipe(\n      switchMap((categories: any[]) => {\n        const category = categories.find((cat) => cat.id === categoryId);\n        if (category && category.courses[courseId]) {\n          category.courses.splice(courseId, 1);\n        }\n        return this.updateCursos(categories);\n      })\n    );\n  }\n\n  inscribirCurso(categoryId: string, updatedCourse: any) {\n    const url = `/api/categorias/${categoryId}/inscribirCurso`; // Endpoint simulado\n    return this.http.put(url, updatedCourse);\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                    Private\n                                isLocalStorageAvailable\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/local-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  private isLocalStorageAvailable(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getItem(key: string): any {\n    if (!this.isLocalStorageAvailable()) {\n      console.warn(`localStorage is not available. Called from getItem with key: \"${key}\"`);\n      return null;\n    }\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  }\n\n  setItem(key: string, value: any): void {\n    if (!this.isLocalStorageAvailable()) {\n      console.warn(`localStorage is not available. Called from setItem with key: \"${key}\", value:`, value);\n      return;\n    }\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  removeItem(key: string): void {\n    if (!this.isLocalStorageAvailable()) {\n      console.warn(`localStorage is not available. Called from removeItem with key: \"${key}\"`);\n      return;\n    }\n    localStorage.removeItem(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de Login.\nPermite a los usuarios autenticarse proporcionando un nombre de usuario o correo electrónico y contraseña.\nAl iniciar sesión correctamente, el usuario es redirigido a la página principal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor para inicializar los servicios y el formulario reactivo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProveedor de formularios reactivos.\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento para la navegación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario con los campos necesarios y sus validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo específico del formulario es inválido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del campo a validar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el campo es inválido, de lo contrario, false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario.\nAutentica al usuario utilizando el servicio de autenticación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:28\n                        \n                    \n\n            \n                \n                    Formulario reactivo para manejar los datos del inicio de sesión.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n/**\n * @description\n * Componente de Login.\n * Permite a los usuarios autenticarse proporcionando un nombre de usuario o correo electrónico y contraseña.\n *\n * @usageNotes\n * Al iniciar sesión correctamente, el usuario es redirigido a la página principal.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  imports: [CommonModule, FormsModule, RouterModule, ReactiveFormsModule],\n})\nexport class LoginComponent {\n  /**\n   * Formulario reactivo para manejar los datos del inicio de sesión.\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * @description\n   * Constructor para inicializar los servicios y el formulario reactivo.\n   *\n   * @param fb - Proveedor de formularios reactivos.\n   * @param authService - Servicio de autenticación.\n   * @param router - Servicio de enrutamiento para la navegación.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.initializeForm();\n  }\n\n  /**\n   * @description\n   * Inicializa el formulario con los campos necesarios y sus validaciones.\n   */\n  private initializeForm(): void {\n    this.loginForm = this.fb.group({\n      usernameOrEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * @description\n   * Verifica si un campo específico del formulario es inválido.\n   *\n   * @param field - Nombre del campo a validar.\n   * @returns `true` si el campo es inválido, de lo contrario, `false`.\n   */\n  isFieldInvalid(field: string): boolean {\n    const control = this.loginForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  /**\n   * @description\n   * Maneja el envío del formulario.\n   * Autentica al usuario utilizando el servicio de autenticación.\n   */\n  onSubmit(): void {\n    if (this.loginForm.invalid) return;\n  \n    const { usernameOrEmail, password } = this.loginForm.value;\n  \n    this.authService.login({ usernameOrEmail, password }).subscribe({\n      next: (user) => {\n        if (user) {\n          Swal.fire({\n            title: 'Inicio de sesión exitoso',\n            text: 'Redirigiendo...',\n            icon: 'success',\n            timer: 3000,\n            showConfirmButton: false,\n          }).then(() => {\n            this.router.navigate(['/index']);\n          });\n        } else {\n          Swal.fire({\n            title: 'Error',\n            text: 'Usuario o contraseña incorrectos',\n            icon: 'error',\n            confirmButtonText: 'OK',\n          });\n        }\n      },\n      error: () => {\n        Swal.fire({\n          title: 'Error',\n          text: 'No se pudo completar la solicitud.',\n          icon: 'error',\n          confirmButtonText: 'OK',\n        });\n      },\n    });\n  }\n  \n}\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        Iniciar Sesión\n        \n          \n            Nombre de Usuario o Correo\n            \n            \n              Por favor, introduce tu usuario o correo válido.\n            \n          \n          \n            Contraseña\n            \n            \n              Por favor, introduce tu contraseña.\n            \n          \n          Ingresar\n        \n        ¿Olvidaste tu contraseña?\n      \n      \n      \n        ¿Eres nuevo? Regístrate\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Iniciar Sesión                              Nombre de Usuario o Correo                                      Por favor, introduce tu usuario o correo válido.                                            Contraseña                                      Por favor, introduce tu contraseña.                                Ingresar                ¿Olvidaste tu contraseña?                          ¿Eres nuevo? Regístrate            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MisCursosComponent.html":{"url":"components/MisCursosComponent.html","title":"component - MisCursosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MisCursosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/mis-cursos/mis-cursos.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar y visualizar los cursos inscritos por el usuario.\nEste componente muestra la lista de cursos inscritos y permite al usuario\neliminarlos o simular el acceso a ellos.\n\nImportar este componente en el módulo principal.\nUsar el selector app-mis-cursos en la plantilla para mostrar los cursos inscritos.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mis-cursos\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./mis-cursos.component.css\n            \n\n\n\n            \n                templateUrl\n                ./mis-cursos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cursosInscritos\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                asistirCurso\n                            \n                            \n                                eliminarCurso\n                            \n                            \n                                loadCursosInscritos\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cursosService: CursosService, userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/mis-cursos/mis-cursos.component.ts:37\n                            \n                        \n\n                \n                    \n                            Inicializa los datos del usuario logueado y los cursos inscritos.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cursosService\n                                                  \n                                                        \n                                                                        CursosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para manejar la autenticación.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para manejar la navegación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        asistirCurso\n                        \n                    \n                \n            \n            \n                \nasistirCurso(curso: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/mis-cursos/mis-cursos.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                curso\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObjeto del curso seleccionado.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarCurso\n                        \n                    \n                \n            \n            \n                \neliminarCurso(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/mis-cursos/mis-cursos.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Actualiza el almacenamiento local con la lista actualizada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nÍndice del curso a eliminar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCursosInscritos\n                        \n                    \n                \n            \n            \n                \nloadCursosInscritos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/mis-cursos/mis-cursos.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Redirige al login si no hay un usuario logueado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/mis-cursos/mis-cursos.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cursosInscritos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/mis-cursos/mis-cursos.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/mis-cursos/mis-cursos.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { CursosService } from '../../services/cursos.service';\nimport { RouterModule, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n/**\n * @description \n * Componente para gestionar y visualizar los cursos inscritos por el usuario.\n * \n * Este componente muestra la lista de cursos inscritos y permite al usuario\n * eliminarlos o simular el acceso a ellos.\n * \n * @usageNotes\n * 1. Importar este componente en el módulo principal.\n * 2. Usar el selector `app-mis-cursos` en la plantilla para mostrar los cursos inscritos.\n */\n\n@Component({\n  selector: 'app-mis-cursos',\n  standalone: true,\n  templateUrl: './mis-cursos.component.html',\n  styleUrls: ['./mis-cursos.component.css'],\n  imports: [CommonModule, RouterModule],\n})\nexport class MisCursosComponent {\n  /**\n   * @description Lista de cursos en los que el usuario está inscrito.\n   */\n  cursosInscritos: any[] = [];\n\n  /**\n   * @description Nombre de usuario del usuario logueado.\n   */\n  username: string = '';\n\n  /**\n   * @description Constructor del componente.\n   * Inicializa los datos del usuario logueado y los cursos inscritos.\n   * \n   * @param authService {authService} - Servicio para manejar la autenticación.\n   * @param router {Router} - Servicio para manejar la navegación.\n   */\n  constructor(\n    private cursosService: CursosService,\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loadCursosInscritos();\n  }\n\n  ngOnInit(): void {\n    this.loadCursosInscritos();\n  } \n\n  /**\n   * @description Carga los cursos inscritos del usuario.\n   * Redirige al login si no hay un usuario logueado.\n   */\n  loadCursosInscritos(): void {\n    const loggedInUser = this.authService.getUser(); // Obtener usuario logueado\n    if (!loggedInUser) {\n      this.router.navigate(['/login']);\n      return;\n    }\n  \n    this.userService.getUsers().subscribe({\n      next: (users) => {\n        this.username = loggedInUser.username;\n  \n        // Obtener los cursos del backend\n        this.cursosService.getCursos().subscribe({\n          next: (categories) => {\n            this.cursosInscritos = [];\n            categories.forEach((category: any) => {\n              category.courses.forEach((course: any) => {\n                if (course.inscritos.includes(this.username)) {\n                  this.cursosInscritos.push(course);\n                }\n              });\n            });\n            console.log('Cursos inscritos:', this.cursosInscritos);\n          },\n          error: () => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'No se pudieron cargar los cursos inscritos.',\n            });\n          },\n        });        \n      },\n      error: () => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se pudo cargar la información del usuario.',\n        });\n      },\n    });\n  }\n  \n\n  /**\n   * @description Simula la acción de asistir a un curso.\n   * \n   * @param curso {any} - Objeto del curso seleccionado.\n   */\n  asistirCurso(curso: any): void {\n    console.log(`Ingresando al curso: ${curso.nombre}`);\n  }\n\n  /**\n   * @description Elimina un curso de la lista de cursos inscritos del usuario.\n   * Actualiza el almacenamiento local con la lista actualizada.\n   * \n   * @param index {number} - Índice del curso a eliminar.\n   */\n  eliminarCurso(index: number): void {\n    const user = this.authService.getUser();\n    if (!user) {\n      this.router.navigate(['/login']);\n      return;\n    }\n  \n    const cursoAEliminar = this.cursosInscritos[index];\n    this.cursosInscritos.splice(index, 1);\n  \n    // Actualizar el backend\n    this.cursosService.getCursos().subscribe({\n      next: (categories) => {\n        // Buscar y actualizar el curso correspondiente en el backend\n        categories.forEach((category: any) => {\n          const curso = category.courses.find((c: any) => c.name === cursoAEliminar.name);\n          if (curso) {\n            const userIndex = curso.inscritos.indexOf(user.username);\n            if (userIndex !== -1) {\n              curso.inscritos.splice(userIndex, 1); // Eliminar usuario del array inscritos\n            }\n          }\n        });\n  \n        // Guardar cambios en el backend\n        this.cursosService.updateCursos(categories).subscribe({\n          next: () => {\n            Swal.fire({\n              icon: 'success',\n              title: 'Curso eliminado',\n              text: `Has eliminado el curso: ${cursoAEliminar.name}`,\n            });\n          },\n          error: () => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'No se pudo eliminar el curso. Inténtalo nuevamente.',\n            });\n          },\n        });\n      },\n      error: () => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se pudieron cargar los cursos.',\n        });\n      },\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  Mis Cursos Inscritos\n  \n    \n      \n        {{ curso.name }}\n        {{ curso.description }}\n        Asistir\n        Eliminar\n      \n    \n  \n\n    \n\n    \n                \n                    ./mis-cursos.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Mis Cursos Inscritos                    {{ curso.name }}        {{ curso.description }}        Asistir        Eliminar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MisCursosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nImportar el componente como un módulo independiente en la aplicación.\nIncluye un enlace a las rutas del sistema y controla la autenticación.\nEl estado de inicio de sesión se actualiza automáticamente al observar el AuthService.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor para inicializar dependencias.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para manejar el estado del usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Maneja el cierre de sesión del usuario y actualiza el estado de autenticación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Ciclo de vida ngOnInit que inicializa el estado de inicio de sesión.\nSe suscribe al observable isLoggedIn$ para actualizar dinámicamente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                        \n                    \n\n            \n                \n                    Indica si el usuario está logueado.\nSe utiliza para controlar la visibilidad de opciones en el navbar.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente Navbar de la aplicación Coureka.\n * \n * Este componente maneja la barra de navegación, mostrando opciones\n * dinámicas basadas en el estado de inicio de sesión del usuario.\n */\n\n/**\n * @usageNotes\n * - Importar el componente como un módulo independiente en la aplicación.\n * - Incluye un enlace a las rutas del sistema y controla la autenticación.\n * - El estado de inicio de sesión se actualiza automáticamente al observar el `AuthService`.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  imports: [CommonModule, RouterModule]\n})\nexport class NavbarComponent implements OnInit {\n  /**\n   * @description\n   * Indica si el usuario está logueado. \n   * Se utiliza para controlar la visibilidad de opciones en el navbar.\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * @description\n   * Constructor para inicializar dependencias.\n   * \n   * @param authService Servicio de autenticación para manejar el estado del usuario.\n   */\n  constructor(private authService: AuthService) {}\n\n  /**\n   * @description\n   * Ciclo de vida `ngOnInit` que inicializa el estado de inicio de sesión.\n   * Se suscribe al observable `isLoggedIn$` para actualizar dinámicamente.\n   */\n  ngOnInit(): void {\n    this.authService.isLoggedIn$().subscribe((status) => {\n      this.isLoggedIn = status;\n    });\n  }\n\n  /**\n   * @description\n   * Maneja el cierre de sesión del usuario y actualiza el estado de autenticación.\n   */\n  logout(): void {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    coureka!\n    \n      \n    \n    \n      \n        \n          Iniciar Sesión\n        \n        \n          Registrarse\n        \n        \n          Inicio\n        \n        \n          Mis Cursos\n        \n        \n          Perfil\n        \n        \n          Cerrar Sesión\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      coureka!                                          Iniciar Sesión                          Registrarse                          Inicio                          Mis Cursos                          Perfil                          Cerrar Sesión                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/perfil/perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar el perfil del usuario.\nEste componente permite visualizar y editar el perfil del usuario,\nincluyendo nombre, correo y contraseña.\n\nImportar este componente en el módulo principal.\nUsar el selector app-perfil en la plantilla para mostrar el formulario de perfil.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./perfil.component.css\n            \n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isEditing\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFieldInvalid\n                            \n                            \n                                    Private\n                                loadCurrentUser\n                            \n                            \n                                matchPasswords\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                            \n                                toggleEditMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/perfil/perfil.component.ts:41\n                            \n                        \n\n                \n                    \n                            Inicializa el formulario y carga los datos del usuario.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para crear formularios reactivos.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del campo a verificar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Indica si el campo es inválido.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchPasswords\n                        \n                    \n                \n            \n            \n                \nmatchPasswords(password: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCampo de la contraseña.\n\n\n                                            \n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCampo de la confirmación de contraseña.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (formGroup: AbstractControl) => void\n\n                        \n                            \n                                Función de validación personalizada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Valida los datos, actualiza el usuario y muestra mensajes de éxito o error.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditMode\n                        \n                    \n                \n            \n            \n                \ntoggleEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Habilita o deshabilita los campos para edición.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormGroup, ReactiveFormsModule, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description \n * Componente para gestionar el perfil del usuario.\n * \n * Este componente permite visualizar y editar el perfil del usuario,\n * incluyendo nombre, correo y contraseña.\n * \n * @usageNotes\n * 1. Importar este componente en el módulo principal.\n * 2. Usar el selector `app-perfil` en la plantilla para mostrar el formulario de perfil.\n */\n\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule]\n})\nexport class PerfilComponent {\n  /**\n   * @description Formulario reactivo para gestionar los datos del perfil.\n   */\n  profileForm: FormGroup;\n\n  /**\n   * @description Indica si el formulario está en modo edición.\n   */\n  isEditing = false;\n\n  /**\n   * @description Almacena la información del usuario actual.\n   */\n  currentUser: any;\n\n  /**\n   * @description Constructor del componente.\n   * Inicializa el formulario y carga los datos del usuario.\n   * \n   * @param fb {FormBuilder} - Servicio para crear formularios reactivos.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private authService: AuthService\n  ) {\n    this.profileForm = this.fb.group({\n      name: [\n        { value: this.currentUser?.name || '', disabled: true },\n        [\n          Validators.required,\n          Validators.pattern(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/),\n          Validators.minLength(10),\n          Validators.maxLength(150),\n        ],\n      ],\n      email: [\n        { value: this.currentUser?.email || '', disabled: true },\n        [\n          Validators.required, \n          Validators.email,\n          Validators.minLength(11),\n          Validators.maxLength(254),\n        ],\n      ],\n      password: [\n        { value: '', disabled: true },\n        [\n          Validators.minLength(8),\n          Validators.maxLength(64),\n          Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?`~])/),\n        ],\n      ],\n      confirmPassword: [{ value: '', disabled: true }],\n    },\n    {\n      validators: this.matchPasswords('password', 'confirmPassword'),\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadCurrentUser();\n  }\n\n  /**\n   * @description Carga el usuario logueado desde el bucket.\n   */\n  private loadCurrentUser(): void {\n    const loggedInUser = this.authService.getUser(); // Obtener el usuario actual\n    if (!loggedInUser) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'No se encontró un usuario logueado.',\n      });\n      return;\n    }\n    this.userService.getUsers().subscribe({\n      next: (users) => {\n        this.currentUser = users.find(\n          (user: any) =>\n            user.username === loggedInUser.username || user.email === loggedInUser.email\n        );\n\n        if (this.currentUser) {\n          this.profileForm.patchValue({\n            name: this.currentUser.name,\n            email: this.currentUser.email,\n          });\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'El usuario no fue encontrado en el sistema.',\n          });\n        }\n      },\n      error: () => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se pudo cargar el perfil del usuario.',\n        });\n      },\n    });\n  }\n  /**\n   * @description Valida si las contraseñas coinciden.\n   * \n   * @param password {string} - Campo de la contraseña.\n   * @param confirmPassword {string} - Campo de la confirmación de contraseña.\n   * @returns {ValidatorFn} Función de validación personalizada.\n   */\n  matchPasswords(password: string, confirmPassword: string) {\n    return (formGroup: AbstractControl) => {\n      const pass = formGroup.get(password)?.value;\n      const confirmPass = formGroup.get(confirmPassword)?.value;\n\n      if (pass !== confirmPass) {\n        formGroup.get(confirmPassword)?.setErrors({ noMatch: true });\n      } else {\n        formGroup.get(confirmPassword)?.setErrors(null);\n      }\n    };\n  }\n\n  /**\n   * @description Alterna el modo edición del formulario.\n   * Habilita o deshabilita los campos para edición.\n   */\n  toggleEditMode(): void {\n    this.isEditing = !this.isEditing;\n\n    if (this.isEditing) {\n      this.profileForm.get('name')?.enable();\n      this.profileForm.get('email')?.enable();\n      this.profileForm.get('password')?.enable();\n      this.profileForm.get('confirmPassword')?.enable();\n    } else {\n      this.resetForm();\n    }\n  }\n\n  /**\n   * @description Restablece los valores originales del formulario.\n   */\n  private resetForm(): void {\n    this.profileForm.patchValue({\n      name: this.currentUser?.name || '',\n      email: this.currentUser?.email || '',\n      password: '',\n      confirmPassword: '',\n    });\n\n    this.profileForm.get('name')?.disable();\n    this.profileForm.get('email')?.disable();\n    this.profileForm.get('password')?.disable();\n    this.profileForm.get('confirmPassword')?.disable();\n  }\n\n  /**\n   * @description Verifica si un campo del formulario es inválido.\n   * \n   * @param field {string} - Nombre del campo a verificar.\n   * @returns {boolean} Indica si el campo es inválido.\n   */\n  isFieldInvalid(field: string): boolean {\n    const control = this.profileForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  /**\n   * @description Maneja el envío del formulario.\n   * Valida los datos, actualiza el usuario y muestra mensajes de éxito o error.\n   */\n  onSubmit(): void {\n    if (this.profileForm.invalid) return;\n\n    const { name, email, password, confirmPassword } = this.profileForm.getRawValue();\n\n    if (password && password !== confirmPassword) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Las contraseñas no coinciden.',\n      });\n      return;\n    }\n\n    const updatedUser = {\n      ...this.currentUser,\n      name,\n      email,\n      password: password || this.currentUser.password,\n    };\n\n    this.userService.updateUser(updatedUser).subscribe({\n      next: () => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Perfil actualizado',\n          text: 'Tus cambios han sido guardados exitosamente.',\n        });\n        this.toggleEditMode();\n      },\n      error: () => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se pudo actualizar el perfil. Inténtalo nuevamente.',\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    Perfil\n    \n        \n            Nombre Completo\n            \n            \n                \n                    Nombre es obligatorio.\n                  \n                  \n                    El nombre debe tener al menos 10 caracteres.\n                  \n                  \n                    El nombre no debe sobrepasar los 150 caracteres.\n                  \n                  \n                    El nombre no puede contener números ni caracteres especiales.\n                  \n            \n        \n        \n            Correo Electrónico\n            \n            \n              \n                Correo es obligatorio.\n              \n              \n                El correo debe tener al menos 11 caracteres.\n              \n              \n                El correo no debe sobrepasar los 150 caracteres.\n              \n              \n                Ingresa un correo válido.\n              \n            \n        \n        \n            Nueva Contraseña\n            \n            \n                \n                    La contraseña debe tener al menos 8 caracteres.\n                \n                \n                    La contraseña no debe sobrepasar los 64 caracteres.\n                \n                \n                    La contraseña debe incluir al menos una mayúscula, una minúscula, un número y un carácter especial.\n                \n            \n        \n        \n            Confirmar Nueva Contraseña\n            \n            \n                Las contraseñas no coinciden.\n            \n        \n        \n            \n                {{ isEditing ? 'Cancelar' : 'Editar' }}\n            \n            \n                Guardar Cambios\n            \n        \n    \n\n    \n\n    \n                \n                    ./perfil.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfil                        Nombre Completo                                                            Nombre es obligatorio.                                                        El nombre debe tener al menos 10 caracteres.                                                        El nombre no debe sobrepasar los 150 caracteres.                                                        El nombre no puede contener números ni caracteres especiales.                                                          Correo Electrónico                                                      Correo es obligatorio.                                            El correo debe tener al menos 11 caracteres.                                            El correo no debe sobrepasar los 150 caracteres.                                            Ingresa un correo válido.                                                      Nueva Contraseña                                                            La contraseña debe tener al menos 8 caracteres.                                                    La contraseña no debe sobrepasar los 64 caracteres.                                                    La contraseña debe incluir al menos una mayúscula, una minúscula, un número y un carácter especial.                                                        Confirmar Nueva Contraseña                                        Las contraseñas no coinciden.                                                        {{ isEditing ? \\'Cancelar\\' : \\'Editar\\' }}                                        Guardar Cambios                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecuperarContrasenaComponent.html":{"url":"components/RecuperarContrasenaComponent.html","title":"component - RecuperarContrasenaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecuperarContrasenaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la recuperación de contraseñas.\nEste componente permite a los usuarios solicitar un enlace de recuperación\nde contraseña mediante su correo electrónico.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recuperar-contrasena\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./recuperar-contrasena.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recuperar-contrasena.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFieldInvalid\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor para inicializar dependencias y configurar el formulario.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Constructor de formularios reactivos.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para manejar la navegación.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para interactuar con el backend.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a validar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el campo es inválido, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Maneja la acción de cancelar y redirige al usuario al login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario para procesar la recuperación de contraseña.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la recuperación de contraseñas.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormGroup, ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n/**\n * @description\n * Componente para la recuperación de contraseñas.\n * \n * Este componente permite a los usuarios solicitar un enlace de recuperación\n * de contraseña mediante su correo electrónico.\n */\n@Component({\n  selector: 'app-recuperar-contrasena',\n  standalone: true,\n  templateUrl: './recuperar-contrasena.component.html',\n  styleUrls: ['./recuperar-contrasena.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule]\n})\nexport class RecuperarContrasenaComponent {\n  /**\n   * @description\n   * Formulario reactivo para la recuperación de contraseñas.\n   */\n  forgotPasswordForm!: FormGroup;\n\n  /**\n   * @description\n   * Constructor para inicializar dependencias y configurar el formulario.\n   * \n   * @param fb Constructor de formularios reactivos.\n   * @param router Router para manejar la navegación.\n   * @param userService Servicio para interactuar con el backend.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {\n    this.forgotPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  /**\n   * @description\n   * Verifica si un campo del formulario es inválido.\n   * \n   * @param field Nombre del campo a validar.\n   * @returns `true` si el campo es inválido, de lo contrario `false`.\n   */\n  isFieldInvalid(field: string): boolean {\n    const control = this.forgotPasswordForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  /**\n   * @description\n   * Maneja el envío del formulario para procesar la recuperación de contraseña.\n   */\n  onSubmit(): void {\n    if (this.forgotPasswordForm.invalid) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Por favor, introduce un correo electrónico válido.',\n      });\n      return;\n    }\n\n    const email = this.forgotPasswordForm.get('email')?.value;\n\n    // Validar si el correo existe en el backend\n    this.userService.getUsers().subscribe({\n      next: (users) => {\n        const user = users.find((u: any) => u.email === email);\n        if (user) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Correo enviado',\n            text: 'Se ha enviado un enlace para recuperar tu contraseña.',\n          }).then(() => {\n            this.router.navigate(['/login']);\n          });\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Correo no encontrado',\n            text: 'El correo ingresado no está registrado.',\n          });\n        }\n      },\n      error: () => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se pudo procesar la solicitud. Inténtalo más tarde.',\n        });\n      },\n    });\n  }\n\n  /**\n   * @description\n   * Maneja la acción de cancelar y redirige al usuario al login.\n   */\n  onCancel(): void {\n    this.router.navigate(['/login']);\n  }\n}\n    \n\n    \n        \n    \n      \n        \n      \n      \n        \n          Recuperar Contraseña\n          \n            \n              Correo Electrónico\n              \n              \n                Por favor, introduce un correo electrónico válido.\n              \n            \n            \n              \n                \n                  Cancelar\n                \n              \n              \n                Enviar\n              \n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./recuperar-contrasena.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Recuperar Contraseña                                    Correo Electrónico                                            Por favor, introduce un correo electrónico válido.                                                                                      Cancelar                                                            Enviar                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecuperarContrasenaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistroComponent.html":{"url":"components/RegistroComponent.html","title":"component - RegistroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registro/registro.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de Registro.\nPermite a los usuarios registrarse proporcionando un nombre, correo electrónico, nombre de usuario y contraseña.\nEste componente incluye validaciones personalizadas para contraseñas y confirmación de contraseñas.\nAl registrarse con éxito, los datos se almacenan en el json y el usuario es redirigido a la página de inicio de sesión.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registro\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./registro.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registro.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                matchPasswords\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registro/registro.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor para inicializar el formulario y los servicios requeridos.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProveedor de formularios reactivos.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento para la navegación.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de usuarios registrados.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registro/registro.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario con los campos necesarios y sus validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registro/registro.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo específico del formulario es inválido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del campo a validar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el campo es inválido, de lo contrario, false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchPasswords\n                        \n                    \n                \n            \n            \n                \nmatchPasswords(password: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registro/registro.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Validación personalizada para verificar que la contraseña y su confirmación coincidan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del control de contraseña.\n\n\n                                            \n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre del control de confirmación de contraseña.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (formGroup: AbstractControl) => void\n\n                        \n                            \n                                Una función de validación.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registro/registro.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Maneja el evento de envío del formulario.\nRegistra un nuevo usuario si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(title: string, text: string, icon: \"success\" | \"error\" | \"warning\" | \"info\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registro/registro.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Muestra una alerta utilizando SweetAlert2.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTítulo de la alerta.\n\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMensaje de la alerta.\n\n\n                                            \n                                        \n                                        \n                                                icon\n                                            \n                                                        \"success\" | \"error\" | \"warning\" | \"info\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTipo de alerta (success, error, warning, info).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registro/registro.component.ts:28\n                        \n                    \n\n            \n                \n                    Formulario reactivo para manejar los datos del registro.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormGroup, ReactiveFormsModule, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport Swal from 'sweetalert2';\n\n/**\n * @description\n * Componente de Registro.\n * Permite a los usuarios registrarse proporcionando un nombre, correo electrónico, nombre de usuario y contraseña.\n *\n * @usageNotes\n * Este componente incluye validaciones personalizadas para contraseñas y confirmación de contraseñas.\n * Al registrarse con éxito, los datos se almacenan en el json y el usuario es redirigido a la página de inicio de sesión.\n */\n@Component({\n  selector: 'app-registro',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule, ReactiveFormsModule],\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css'],\n})\nexport class RegistroComponent {\n  /**\n   * Formulario reactivo para manejar los datos del registro.\n   */\n  registerForm!: FormGroup;\n\n  /**\n   * @description\n   * Constructor para inicializar el formulario y los servicios requeridos.\n   *\n   * @param fb - Proveedor de formularios reactivos.\n   * @param router - Servicio de enrutamiento para la navegación.\n   * @param userService - Servicio de usuarios registrados.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {\n    this.initializeForm();\n  }\n\n  /**\n   * @description\n   * Inicializa el formulario con los campos necesarios y sus validaciones.\n   */\n  private initializeForm(): void {\n    this.registerForm = this.fb.group(\n      {\n        name: [\n          '', \n          [\n            Validators.required,\n            Validators.pattern(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/),\n            Validators.minLength(10),\n            Validators.maxLength(150)\n          ],\n        ],\n        email: ['', [\n          Validators.required, \n          Validators.email,\n          Validators.minLength(11),\n          Validators.maxLength(254),\n        ]],\n        username: ['', [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(50)\n        ]\n        ],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(64),\n            Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?`~])/),\n          ],\n        ],\n        confirmPassword: ['', Validators.required],\n        role: ['user'],\n      },\n      {\n        validators: this.matchPasswords('password', 'confirmPassword'),\n      }\n    );\n  }\n\n  /**\n   * @description\n   * Muestra una alerta utilizando SweetAlert2.\n   *\n   * @param title - Título de la alerta.\n   * @param text - Mensaje de la alerta.\n   * @param icon - Tipo de alerta (success, error, warning, info).\n   */\n  showAlert(title: string, text: string, icon: 'success' | 'error' | 'warning' | 'info'): void {\n    Swal.fire({\n      title,\n      text,\n      icon,\n      confirmButtonText: 'OK',\n    });\n  }\n\n  /**\n   * @description\n   * Validación personalizada para verificar que la contraseña y su confirmación coincidan.\n   *\n   * @param password - Nombre del control de contraseña.\n   * @param confirmPassword - Nombre del control de confirmación de contraseña.\n   * @returns Una función de validación.\n   */\n  matchPasswords(password: string, confirmPassword: string) {\n    return (formGroup: AbstractControl) => {\n      const pass = formGroup.get(password)?.value;\n      const confirmPass = formGroup.get(confirmPassword)?.value;\n      if (pass !== confirmPass) {\n        formGroup.get(confirmPassword)?.setErrors({ noMatch: true });\n      } else {\n        formGroup.get(confirmPassword)?.setErrors(null);\n      }\n    };\n  }\n\n  /**\n   * @description\n   * Verifica si un campo específico del formulario es inválido.\n   *\n   * @param field - Nombre del campo a validar.\n   * @returns `true` si el campo es inválido, de lo contrario, `false`.\n   */\n  isFieldInvalid(field: string): boolean {\n    const control = this.registerForm.get(field);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  /**\n   * @description\n   * Maneja el evento de envío del formulario.\n   * Registra un nuevo usuario si el formulario es válido.\n   */\n  onSubmit(): void {\n    if (this.registerForm.invalid) return;\n  \n    const { name, email, username, password, role } = this.registerForm.value;\n    const newUser = { name, email, username, password, role };\n  \n    this.userService.registerUser(newUser).subscribe({\n      next: () => {\n        Swal.fire({\n          title: 'Registro Exitoso',\n          text: 'Ahora puedes iniciar sesión.',\n          icon: 'success',\n          confirmButtonText: 'Ir al Login',\n        }).then(() => {\n          this.router.navigate(['/login']);\n        });\n      },\n      error: (err) => {\n        console.error(err);\n        Swal.fire({\n          title: 'Error',\n          text: 'Hubo un problema con el registro. Inténtalo de nuevo.',\n          icon: 'error',\n          confirmButtonText: 'OK',\n        });\n      },\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        Registro de Usuario\n        \n          \n            Nombre Completo\n            \n            \n              \n                Nombre es obligatorio.\n              \n              \n                El nombre debe tener al menos 10 caracteres.\n              \n              \n                El nombre no debe sobrepasar los 150 caracteres.\n              \n              \n                El nombre no puede contener números ni caracteres especiales.\n              \n            \n          \n\n          \n            Correo Electrónico\n            \n            \n              \n                Correo es obligatorio.\n              \n              \n                El correo debe tener al menos 11 caracteres.\n              \n              \n                El correo no debe sobrepasar los 150 caracteres.\n              \n              \n                Ingresa un correo válido.\n              \n            \n          \n\n          \n            Nombre de Usuario\n            \n            \n              Nombre de usuario es obligatorio.\n            \n          \n\n          \n            Contraseña\n            \n            \n              \n                La contraseña es obligatoria.\n              \n              \n                La contraseña debe tener al menos 8 caracteres.\n              \n              \n                La contraseña no debe sobrepasar los 64 caracteres.\n              \n              \n                La contraseña debe incluir al menos una mayúscula, una minúscula, un número y un carácter especial.\n              \n            \n          \n\n          \n            Confirmar Contraseña\n            \n            \n              Las contraseñas no coinciden.\n            \n          \n\n          Registrarse\n        \n      \n      \n      \n        ¿Ya tienes cuenta?\n          Inicia sesión\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registro.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Registro de Usuario                              Nombre Completo                                                      Nombre es obligatorio.                                            El nombre debe tener al menos 10 caracteres.                                            El nombre no debe sobrepasar los 150 caracteres.                                            El nombre no puede contener números ni caracteres especiales.                                                          Correo Electrónico                                                      Correo es obligatorio.                                            El correo debe tener al menos 11 caracteres.                                            El correo no debe sobrepasar los 150 caracteres.                                            Ingresa un correo válido.                                                          Nombre de Usuario                                      Nombre de usuario es obligatorio.                                            Contraseña                                                      La contraseña es obligatoria.                                            La contraseña debe tener al menos 8 caracteres.                                            La contraseña no debe sobrepasar los 64 caracteres.                                            La contraseña debe incluir al menos una mayúscula, una minúscula, un número y un carácter especial.                                                          Confirmar Contraseña                                      Las contraseñas no coinciden.                                Registrarse                                  ¿Ya tienes cuenta?          Inicia sesión                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MisCursosComponent', 'selector': 'app-mis-cursos'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RecuperarContrasenaComponent', 'selector': 'app-recuperar-contrasena'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserCredentials\n                            \n                            \n                                checkUserExists\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                registerUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserCredentials\n                        \n                    \n                \n            \n            \n                \ncheckUserCredentials(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserExists\n                        \n                    \n                \n            \n            \n                \ncheckUserExists(email: string, username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://mibucketfullstackiis3.s3.us-east-1.amazonaws.com/user.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'https://mibucketfullstackiis3.s3.us-east-1.amazonaws.com/user.json';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Registrar un nuevo usuario\n  registerUser(user: any): Observable {\n    return this.http.get(this.apiUrl).pipe(\n      map((users) => {\n        users.push(user);\n        return users;\n      }),\n      switchMap((updatedUsers) => {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.put(this.apiUrl, updatedUsers, { headers });\n      })\n    );\n  }\n  \n  updateUser(updatedUser: any): Observable {\n    return this.getUsers().pipe(\n      map((users) => {\n        const userIndex = users.findIndex((u: any) => u.username === updatedUser.username);\n        if (userIndex !== -1) {\n          users[userIndex] = updatedUser;\n        }\n        return users;\n      }),\n      switchMap((updatedUsers) => {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.put(this.apiUrl, updatedUsers, { headers });\n      })\n    );\n  }\n  \n\n  login(credentials: { usernameOrEmail: string; password: string }): Observable {\n    return this.http.get(this.apiUrl).pipe(\n      map((users) =>\n        users.find(\n          (u) =>\n            (u.email === credentials.usernameOrEmail || u.username === credentials.usernameOrEmail) &&\n            u.password === credentials.password\n        )\n      )\n    );\n  }\n  \n  // Verificar si un usuario existe (opcional, dependiendo del backend)\n  checkUserExists(email: string, username: string): Observable {\n    return this.http.get(`${this.apiUrl}/exists?email=${email}&username=${username}`);\n  }\n\n  checkUserCredentials(credentials: { usernameOrEmail: string; password: string }): Observable {\n    return this.http.get(this.apiUrl).pipe(\n        map((users) =>\n            users.find(\n                (u) =>\n                    (u.email === credentials.usernameOrEmail || u.username === credentials.usernameOrEmail) &&\n                    u.password === credentials.password\n            )\n        )\n    );\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                53 %\n                (15/28)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/mis-cursos/mis-cursos.component.ts\n            \n            component\n            MisCursosComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/components/recuperar-contrasena/recuperar-contrasena.component.ts\n            \n            component\n            RecuperarContrasenaComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/registro/registro.component.ts\n            \n            component\n            RegistroComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/services/cursos.service.ts\n            \n            injectable\n            CursosService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @angular/ssr : ^18.2.12\n        \n            @popperjs/core : ^2.11.8\n        \n            @sweetalert2/ngx-sweetalert2 : ^12.4.0\n        \n            bootstrap : ^5.3.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.14.5\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProyectoAngular\nThis project was generated with Angular CLI version 18.2.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes), \n    provideClientHydration(),\n    provideHttpClient(withFetch())]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
